{"version":3,"sources":["utils/currencies.js","utils/constant.js","utils/index.js","components/Gantt/Gantt.js","components/Gantt/index.js","hooks/useScreenOrientation.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","components/CurrencyPriceArea/converter/index.js","components/CurrencyPriceArea/CurrencyPriceArea.js","components/CurrencyPriceArea/index.js","components/MessageArea/MessageArea.js","components/MessageArea/index.js","App.js","registerServiceWorker.js","index.js"],"names":["getUSDHistoryPrice","LOCAL_HISTORY_PRICE","JSON","parse","localStorage","getItem","lastDate","currentWeekDay","Date","getDay","gapDays","Math","ceil","abs","hasLocalHistoryPrice","gantt","message","type","text","console","log","CURRENCY_HISTORY","Promise","resolve","reject","axios","method","url","then","response","status","$","cheerio","load","data","each","currentInfo","date","undefined","buyPrice","sellPrice","this","find","tdIndex","push","setItem","stringify","catch","error","priceHistoryFormatter","USD_HISTORY","reverse","length","lastSellPrice","dateHistory","map","item","buyPriceHistory","sellPriceHistory","INIT_DATA","id","holder","start_date","amount","duration","directMember","directMemberAmount","teamMember","teamAmount","progress","parent","level","end_date","$open","profit_date","links","source","target","ZOOM_CONFIG","levels","name","scale_height","min_column_width","scales","unit","step","format","dateToStr","date_to_str","endDate","add","height","getAllLayerAmount","uid","children","childrenAmount","findAllChildren","getChildren","forEach","userInfo","getTask","reduce","accumulator","currentValue","Number","getFirstLayerAmount","childrenID","total","childID","getSelfLevel","isLevelIB","getSelfProgress","entrustInDate","getTime","floor","holderEditor","map_to","amountEditor","startDateEditor","min","max","config","task_date","Gantt","props","dataProcessor","initZoom","ext","zoom","init","CONSTANT","value","setLevel","onDataUpdated","createDataProcessor","action","nextProps","addMarker","css","title","utils","autofit","grid_width","open_tree_initially","keyboard_navigation_cells","multiselect","quickinfo_buttons","reorder_grid_columns","order_branch","xml_date","columns","label","align","width","min_width","max_width","resize","template","getWBSCode","tree","editor","task","lightbox","sections","default_value","allow_root","root_label","start","end","ev","button","single_date","locale","labels","attachEvent","isNaN","link","tooltips","templates","tooltip_text","tooltipFor","selector","html","event","node","taskId","getAttribute","detail","tooltip_date_format","task_class","0","1","2","3","match","quick_info_title","quick_info_content","scale_cell_class","timeline_cell_class","task_text","rightside_text","progress_text","link_class","grid_folder","grid_file","drag_link","from","from_start","to","to_start","link_description","types","start_to_start","finish_to_start","addTaskLayer","renderer","render","el","document","createElement","className","sizes","getTaskPosition","style","left","top","setAttribute","getRectangle","view","parseDate","tasks","ganttContainer","initGanttDataProcessor","destructor","setZoom","ref","input","Component","getOrientation","window","screen","orientation","useScreenOrientation","useState","setOrientation","updateOrientation","useEffect","addEventListener","removeEventListener","Toolbar","handleImportData","screenOrientation","isFullGrid","setIsFullGrid","foldMenu","getGridColumn","hide","unFoldMenu","importFromJSON","files","FILE_READER","FileReader","NEW_DATA","result","validatedNewData","unsafeData","err","readAsText","innerWidth","onClick","undo","redo","zoomIn","zoomOut","fullscreen","expand","importBox","modalbox","buttons","callback","removeItem","location","reload","serialize","fileDownloader","toISOString","substring","split","join","exportAndDownload","Converter","isReady","setIsReady","exchangeBase","setExchangeBase","setAmount","href","rel","itemAmount","key","clsx","Intl","NumberFormat","placeholder","onChange","preventDefault","code","originResult","round","renderResult","CurrencyPriceArea","mode","setLastDate","setLastSellPrice","setDateHistory","setBuyPriceHistory","setSellPriceHistory","a","UTILS","options","xaxis","categories","series","MessageArea","renderMessageArea","messages","random","defaultProps","App","state","isUpdating","currentZoom","currentMode","logDataUpdate","setState","addMessage","currentData","currentLinks","newItem","updateImportData","LOCAL_DATA","handleToggleMode","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","URL","process","origin","fetch","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ebb55415.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport cheerio from \"cheerio\";\n\nconst CORS = \"https://cors-anywhere.herokuapp.com\";\nconst USD_CURRENCY_API_ENDPOINT =\n  \"https://rate.bot.com.tw/xrt/quote/l6m/USD-TWD\";\n\nconst hasLocalHistoryPrice = (LOCAL_HISTORY_PRICE) => {\n  if (!LOCAL_HISTORY_PRICE) return false;\n\n  const lastDate = LOCAL_HISTORY_PRICE[0][\"date\"];\n  const currentWeekDay = new Date().getDay();\n  const gapDays =\n    Math.ceil(\n      Math.abs(new Date(lastDate) - new Date()) / (1000 * 60 * 60 * 24)\n    ) - 1;\n\n  // 超過一天\n  if (gapDays > 0) {\n    return false;\n  }\n  // 週末\n  if (currentWeekDay === 6 && gapDays > 1) {\n    return false;\n  }\n  if (currentWeekDay === 0 && gapDays > 2) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const getUSDHistoryPrice = () => {\n  const LOCAL_HISTORY_PRICE = JSON.parse(\n    localStorage.getItem(\"hiifx_history_price\")\n  );\n\n  if (hasLocalHistoryPrice(LOCAL_HISTORY_PRICE)) {\n    return LOCAL_HISTORY_PRICE;\n  }\n  gantt.message({\n    type: \"info\",\n    text: \"更新匯率中~~\",\n  });\n  console.log(\"Fetch price history\");\n\n  let CURRENCY_HISTORY = [];\n\n  return new Promise((resolve, reject) => {\n    axios({\n      method: \"GET\",\n      url: `${CORS}/${USD_CURRENCY_API_ENDPOINT}`,\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          const $ = cheerio.load(response.data);\n\n          $(\"tbody > tr\").each(function () {\n            let currentInfo = {\n              date: undefined,\n              buyPrice: undefined,\n              sellPrice: undefined,\n            };\n\n            $(this)\n              .find(\"td\")\n              .each(function (tdIndex) {\n                if (tdIndex === 0) {\n                  currentInfo[\"date\"] = $(this).text();\n                }\n                if (tdIndex === 2) {\n                  currentInfo[\"buyPrice\"] = $(this).text();\n                }\n                if (tdIndex === 3) {\n                  currentInfo[\"sellPrice\"] = $(this).text();\n                }\n              });\n\n            if (\n              currentInfo[\"date\"] &&\n              currentInfo[\"buyPrice\"] &&\n              currentInfo[\"sellPrice\"]\n            ) {\n              CURRENCY_HISTORY.push(currentInfo);\n            }\n          });\n\n          localStorage.setItem(\n            \"hiifx_history_price\",\n            JSON.stringify(CURRENCY_HISTORY)\n          );\n          gantt.message({\n            type: \"info\",\n            text: \"匯率已更新~~🎉🎉\",\n          });\n          resolve(CURRENCY_HISTORY);\n        }\n      })\n      .catch((error) => {\n        gantt.message({\n          type: \"error\",\n          text: \"匯率未更新~~🎉🎉\",\n        });\n        reject(error);\n      });\n  });\n};\n\nexport const priceHistoryFormatter = (USD_HISTORY) => {\n  const data = USD_HISTORY.reverse();\n\n  return {\n    lastDate: data[data.length - 1].date,\n    lastSellPrice: data[data.length - 1].sellPrice,\n    dateHistory: data.map((item) => item.date),\n    buyPriceHistory: data.map((item) => item.buyPrice),\n    sellPriceHistory: data.map((item) => item.sellPrice),\n  };\n};\n","import { gantt } from \"dhtmlx-gantt\";\n\nexport const INIT_DATA = {\n  data: [\n    {\n      id: 1,\n      holder: \"自己\",\n      start_date: \"2020-07-16 00:00\",\n      amount: 1500,\n      duration: 35,\n      directMember: 5,\n      directMemberAmount: 23600,\n      teamMember: 6,\n      teamAmount: 23600,\n      progress: 0.51,\n      parent: 0,\n      level: \"ib\",\n      end_date: \"2020-08-20 00:00\",\n      $open: true,\n    },\n    {\n      id: 2,\n      holder: \"投資人 #1\",\n      start_date: \"2020-07-20 00:00\",\n      parent: 1,\n      amount: 1500,\n      duration: 35,\n      directMember: 1,\n      directMemberAmount: 0,\n      teamMember: 1,\n      teamAmount: 0,\n      progress: 0.39,\n      level: \"trader\",\n      end_date: \"2020-08-24 00:00\",\n      $open: true,\n    },\n    {\n      duration: 35,\n      id: 1596379445693,\n      start_date: \"2020-07-24 00:00\",\n      parent: \"2\",\n      progress: 0.28,\n      holder: \"投資人 #6\",\n      amount: \"0\",\n      profit_date: null,\n      directMember: 0,\n      directMemberAmount: 0,\n      teamMember: 0,\n      teamAmount: 0,\n      level: \"trader\",\n      end_date: \"2020-08-28 00:00\",\n      $open: true,\n    },\n    {\n      duration: 35,\n      id: 1596379445681,\n      start_date: \"2020-07-16 00:00\",\n      parent: \"1\",\n      progress: 0.51,\n      holder: \"投資人 #2\",\n      amount: \"1500\",\n      profit_date: null,\n      directMember: 0,\n      directMemberAmount: 0,\n      teamMember: 0,\n      teamAmount: 0,\n      level: \"trader\",\n      end_date: \"2020-08-20 00:00\",\n      $open: true,\n    },\n    {\n      duration: 35,\n      id: 1596379445695,\n      start_date: \"2020-07-16 00:00\",\n      parent: \"1\",\n      progress: 0.51,\n      holder: \"投資人 #3\",\n      amount: \"9000\",\n      profit_date: null,\n      directMember: 0,\n      directMemberAmount: 0,\n      teamMember: 0,\n      teamAmount: 0,\n      level: \"trader\",\n      end_date: \"2020-08-20 00:00\",\n      $open: true,\n    },\n    {\n      duration: 35,\n      id: 1596379445697,\n      start_date: \"2020-07-18 00:00\",\n      parent: \"1\",\n      progress: 0.45,\n      holder: \"投資人 #4\",\n      amount: \"1600\",\n      profit_date: null,\n      directMember: 0,\n      directMemberAmount: 0,\n      teamMember: 0,\n      teamAmount: 0,\n      level: \"trader\",\n      end_date: \"2020-08-22 00:00\",\n      $open: true,\n    },\n    {\n      duration: 35,\n      id: 1596379445699,\n      start_date: \"2020-07-12 00:00\",\n      parent: \"1\",\n      progress: 0.62,\n      holder: \"投資人 #5\",\n      amount: \"10000\",\n      profit_date: null,\n      directMember: 0,\n      directMemberAmount: 0,\n      teamMember: 0,\n      teamAmount: 0,\n      level: \"trader\",\n      end_date: \"2020-08-16 00:00\",\n      $open: true,\n    },\n  ],\n  links: [\n    {\n      id: 1,\n      source: 1,\n      target: 2,\n      type: \"1\",\n    },\n    {\n      source: \"1\",\n      target: \"1596379445681\",\n      type: \"1\",\n      id: 1596379445692,\n    },\n    {\n      source: \"2\",\n      target: \"1596379445693\",\n      type: \"1\",\n      id: 1596379445694,\n    },\n    {\n      source: \"1\",\n      target: \"1596379445695\",\n      type: \"1\",\n      id: 1596379445696,\n    },\n    {\n      source: \"1\",\n      target: \"1596379445697\",\n      type: \"1\",\n      id: 1596379445698,\n    },\n    {\n      source: \"1\",\n      target: \"1596379445699\",\n      type: \"1\",\n      id: 1596379445700,\n    },\n  ],\n};\n\nexport const ZOOM_CONFIG = {\n  levels: [\n    {\n      name: \"日\",\n      scale_height: 27,\n      min_column_width: 80,\n      scales: [{ unit: \"day\", step: 1, format: \"%d %M\" }],\n    },\n    {\n      name: \"週\",\n      scale_height: 50,\n      min_column_width: 50,\n      scales: [\n        {\n          unit: \"week\",\n          step: 1,\n          format: function (date) {\n            var dateToStr = gantt.date.date_to_str(\"%d %M\");\n            var endDate = gantt.date.add(date, -6, \"day\");\n            var weekNum = gantt.date.date_to_str(\"%W\")(date);\n            return (\n              \"#\" +\n              weekNum +\n              \", \" +\n              dateToStr(date) +\n              \" - \" +\n              dateToStr(endDate)\n            );\n          },\n        },\n        { unit: \"day\", step: 1, format: \"%j %D\" },\n      ],\n    },\n    {\n      name: \"月\",\n      scale_height: 50,\n      min_column_width: 120,\n      scales: [\n        { unit: \"month\", format: \"%F, %Y\" },\n        { unit: \"week\", format: \"Week #%W\" },\n      ],\n    },\n    {\n      name: \"季\",\n      height: 50,\n      min_column_width: 90,\n      scales: [\n        { unit: \"month\", step: 1, format: \"%M\" },\n        {\n          unit: \"quarter\",\n          step: 1,\n          format: function (date) {\n            var dateToStr = gantt.date.date_to_str(\"%M\");\n            var endDate = gantt.date.add(\n              gantt.date.add(date, 3, \"month\"),\n              -1,\n              \"day\"\n            );\n            return dateToStr(date) + \" - \" + dateToStr(endDate);\n          },\n        },\n      ],\n    },\n    {\n      name: \"年\",\n      scale_height: 50,\n      min_column_width: 30,\n      scales: [{ unit: \"year\", step: 1, format: \"%Y\" }],\n    },\n  ],\n};\n","import { gantt } from \"dhtmlx-gantt\";\n\nexport * from \"./currencies\";\nexport * from \"./constant\";\n\nconst isLevelIB = (data) => {\n  const { amount, directMember, directMemberAmount, teamAmount } = data;\n  return (\n    Number(amount) >= 1500 &&\n    Number(directMember) >= 4 &&\n    Number(directMemberAmount) >= 9000 &&\n    Number(teamAmount) >= 15000\n  );\n};\n\nexport const levelConverter = (level) => {\n  switch (level) {\n    case \"ib\":\n      return \"IB 經理人\";\n    case \"mib\":\n      return \"MIB 經理人\";\n    case \"pib\":\n      return \"PIB 經理人\";\n    default:\n      return \"投資人\";\n  }\n};\n\nexport const getAllLayerAmount = (uid) => {\n  let children = [];\n  let childrenAmount = [];\n\n  const findAllChildren = (uid) => {\n    gantt.getChildren(uid).forEach((item) => {\n      const userInfo = gantt.getTask(item);\n      children.push(userInfo[\"holder\"]);\n      childrenAmount.push(userInfo[\"amount\"]);\n      findAllChildren(item);\n    });\n  };\n\n  findAllChildren(uid);\n\n  return {\n    teamMember: children.length,\n    teamAmount: childrenAmount.reduce(\n      (accumulator, currentValue) => accumulator + Number(currentValue),\n      0\n    ),\n  };\n};\n\nexport const getFirstLayerAmount = (uid) => {\n  const childrenID = gantt.getChildren(uid);\n  let total = 0;\n  childrenID.forEach((childID) => {\n    const userInfo = gantt.getTask(childID);\n    total += Number(userInfo.amount ?? 0);\n  });\n\n  return total;\n};\n\nexport const getSelfLevel = (uid) => {\n  /*\n    TODO implement this function\n    ['trader', 'ib', 'mib', 'pib']\n  */\n  const selfData = gantt.getTask(uid);\n  if (isLevelIB(selfData)) {\n    return \"ib\";\n  }\n  return \"trader\";\n};\n\nexport const sterilizateData = (unsafeData) => {\n  const sterilizatedData = {\n    data: unsafeData?.data.map((item) => ({\n      id: item?.id,\n      holder: item?.holder,\n      amount: item?.amount,\n      directMember: item?.directMember,\n      directMemberAmount: item?.directMemberAmount,\n      teamMember: item?.teamMember,\n      teamAmount: item?.teamAmount,\n      level: item?.level,\n      start_date: item?.start_date,\n      duration: item?.duration,\n      end_date: item?.end_date,\n      parent: item?.parent,\n      progress: item?.progress,\n      $open: true,\n    })),\n    links: unsafeData?.links.map((item) => ({\n      id: item.id,\n      source: item.source,\n      target: item.target,\n      type: item.type,\n    })),\n  };\n\n  return sterilizatedData;\n};\n\nexport const getSelfProgress = (start_date) => {\n  const entrustInDate =\n    (new Date().getTime() - new Date(start_date).getTime()) /\n    (1000 * 3600 * 24);\n  const progress = Math.floor((entrustInDate / 35) * 100) / 100;\n\n  if (progress <= 0) {\n    return 0;\n  } else if (progress >= 100) {\n    return 100;\n  }\n  return Math.floor((entrustInDate / 35) * 100) / 100;\n};\n\nexport const holderEditor = { type: \"text\", map_to: \"holder\" };\nexport const amountEditor = { type: \"text\", map_to: \"amount\" };\nexport const durationEditor = {\n  type: \"number\",\n  map_to: \"duration\",\n  min: 0,\n  max: 50,\n};\nexport const startDateEditor = {\n  type: \"date\",\n  map_to: \"start_date\",\n  min: new Date(2018, 0, 1),\n  max: new Date(),\n};\n\nexport const dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n","import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_fullscreen\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_quick_info\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_undo\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_keyboard_navigation\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_multiselect\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_tooltip\";\nimport \"dhtmlx-gantt/codebase/locale/locale_cn\";\nimport \"./dhtmlxgantt_material.css\";\n\nimport * as utils from \"../../utils\";\nimport * as CONSTANT from \"../../utils/constant\";\n\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.initZoom();\n  }\n\n  // instance of gantt.dataProcessor\n  dataProcessor = null;\n\n  initZoom() {\n    gantt.ext.zoom.init(CONSTANT.ZOOM_CONFIG);\n  }\n\n  setZoom(value) {\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\n     * type: \"task\"|\"link\"\n     * action: \"create\"|\"update\"|\"delete\"\n     * item: data object object\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        }\n\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n        return resolve();\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    gantt.addMarker({\n      start_date: new Date(),\n      css: \"today\",\n      text: \"今天\",\n      title: utils.dateToStr(new Date()),\n    });\n\n    gantt.config.autofit = true;\n    gantt.config.grid_width = 500;\n    gantt.config.open_tree_initially = true;\n    gantt.config.keyboard_navigation_cells = true;\n    gantt.config.multiselect = true;\n    gantt.config.quickinfo_buttons = [\"icon_edit\", \"icon_delete\"];\n    gantt.config.reorder_grid_columns = true;\n    gantt.config.order_branch = true;\n    // gantt.config.keep_grid_width = true;\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    gantt.config.columns = [\n      {\n        name: \"wbs\",\n        label: \"編號\",\n        align: \"center\",\n        width: \"*\",\n        min_width: 40,\n        max_width: 64,\n        resize: true,\n        template: gantt.getWBSCode,\n      },\n      {\n        name: \"holder\",\n        label: \"投資人\",\n        width: \"*\",\n        min_width: 160,\n        max_width: 220,\n        tree: true,\n        resize: true,\n        editor: utils.holderEditor,\n      },\n      {\n        name: \"amount\",\n        label: \"投資額\",\n        align: \"center\",\n        width: \"*\",\n        min_width: 64,\n        max_width: 80,\n        resize: true,\n        editor: utils.amountEditor,\n      },\n      {\n        name: \"start_date\",\n        label: \"初始託管日\",\n        align: \"center\",\n        width: \"*\",\n        min_width: 96,\n        max_width: 128,\n        resize: true,\n        editor: utils.startDateEditor,\n      },\n      {\n        name: \"add_buttons\",\n        label: `<div class=\"gantt_grid_head_cell gantt_grid_head_add\" onclick=\"gantt.createTask({duration: 35, parent: '0'})\"><i class=\"fa fa-plus\"></i></div>`,\n        align: \"center\",\n        max_width: 40,\n        template: (task) =>\n          `<i class=\"fa gantt_button_grid gantt_grid_add fa-plus\" onclick=\"gantt.createTask({duration: 35}, ${task.id});\"></i>`,\n      },\n    ];\n    gantt.config.lightbox.sections = [\n      {\n        name: \"holder\",\n        height: 30,\n        map_to: \"holder\",\n        type: \"textarea\",\n      },\n      {\n        name: \"amount\",\n        height: 30,\n        default_value: \"0\",\n        map_to: \"amount\",\n        type: \"textarea\",\n      },\n      {\n        name: \"parent\",\n        type: \"parent\",\n        allow_root: \"true\",\n        root_label: \"無推薦經紀人\",\n        template: (start, end, ev) =>\n          ev.id === 0 ? \"無推薦經紀人\" : ev.holder,\n      },\n      {\n        name: \"time\",\n        map_to: \"auto\",\n        type: \"duration\",\n      },\n      {\n        name: \"profit\",\n        map_to: { start_date: \"profit_date\" },\n        type: \"duration_optional\",\n        button: true,\n        single_date: true,\n      },\n    ];\n    gantt.locale.labels[\"section_holder\"] = \"投資人\";\n    gantt.locale.labels[\"section_amount\"] = \"投資額\";\n    gantt.locale.labels[\"section_parent\"] = \"推薦經紀人\";\n    gantt.locale.labels[\"section_time\"] = \"託管時間\";\n    gantt.locale.labels[\"icon_delete\"] = \"刪除紀錄\";\n    gantt.locale.labels[\"icon_edit\"] = \"編輯紀錄\";\n    gantt.locale.labels[\"confirm_deleting\"] = \"是否刪除紀錄？\";\n    gantt.locale.labels[\"link\"] = \"連結\";\n    gantt.locale.labels[\"confirm_link_deleting\"] = \"將被刪除\";\n    gantt.locale.labels[\"message_cancel\"] = \"關閉\";\n    gantt.locale.labels[\"icon_save\"] = \"儲資金紀錄\";\n    gantt.locale.labels[\"icon_cancel\"] = \"取消\";\n    gantt.locale.labels[\"section_profit\"] = \"最近一次獲利紀錄\";\n    gantt.locale.labels[\"profit_enable_button\"] = \"加入獲利紀錄\";\n    gantt.locale.labels[\"profit_disable_button\"] = \"移除獲利紀錄\";\n\n    gantt.attachEvent(\"onLightboxSave\", function (id, item) {\n      if (!item.holder) {\n        gantt.message({ type: \"error\", text: \"請輸入投資人\" });\n        return false;\n      }\n      if (!item.amount || isNaN(item.amount)) {\n        gantt.message({\n          type: \"error\",\n          text: \"請輸入正確的投資額\",\n        });\n        return false;\n      }\n      if (!item.parent) {\n        gantt.message({\n          type: \"error\",\n          text: \"請輸入推薦人\",\n        });\n        return false;\n      }\n\n      item.progress = 0.5;\n      item.directMember = 0;\n      item.directMemberAmount = 0;\n      item.teamMember = 0;\n      item.teamAmount = 0;\n      return true;\n    });\n    gantt.attachEvent(\"onBeforeLinkAdd\", function (id, link) {\n      if (link.type !== \"1\") {\n        gantt.message({\n          type: \"error\",\n          text: \"請從託管開始日開始連接\",\n        });\n        return false;\n      }\n    });\n\n    gantt.attachEvent(\"onGanttReady\", () => {\n      const tooltips = gantt.ext.tooltips;\n\n      gantt.templates.tooltip_text = () => null;\n      tooltips.tooltipFor({\n        selector: \".profit.profit-marker\",\n        html: function (event, node) {\n          const taskId = node.getAttribute(\"data-taskId\");\n          const detail = gantt.getTask(taskId);\n\n          return `獲利日期 ${gantt.templates.tooltip_date_format(\n            detail[\"profit_date\"]\n          )} </br>`;\n        },\n      });\n    });\n\n    gantt.templates.task_class = function (start, end, task) {\n      const currentLayer = (gantt.getWBSCode(task).match(/\\./g) || []).length;\n      const LAYER_TABLE = {\n        0: \"top-layer\",\n        1: \"first-layer\",\n        2: \"second-layer\",\n        3: \"third-layer\",\n      };\n      return LAYER_TABLE[currentLayer];\n    };\n    gantt.templates.quick_info_title = (start, end, task) =>\n      `${task.holder} 綁定 ${task.amount} 美金`;\n    gantt.templates.quick_info_content = (start, end, task) =>\n      `身份： ${utils.levelConverter(task.level)} </br>\n      自身綁定： ${task.amount} </br>\n      有效直推：${task[\"directMember\"]} </br>\n      直推綁定： ${task[\"directMemberAmount\"]} </br>\n      團隊人數： ${task[\"teamMember\"]} </br>\n      團隊綁定： ${task[\"teamAmount\"]} </br>\n      `;\n    gantt.templates.scale_cell_class = (date) => {\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return \"weekend\";\n      }\n    };\n    gantt.templates.timeline_cell_class = (task, date) => {\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return \"weekend\";\n      }\n    };\n    gantt.templates.task_text = (start, end, task) =>\n      task.holder && task.amount\n        ? `<b>${task.holder}</b> &nbsp; 綁定 &nbsp; <b>${task.amount}</b> &nbsp; 美金`\n        : \"\";\n    gantt.templates.rightside_text = (start, end, task) => {\n      const entrustInDate =\n        (new Date().getTime() - new Date(start).getTime()) / (1000 * 3600 * 24);\n      if (entrustInDate > 0) {\n        return \"<b>託管 </b>\" + Math.floor(entrustInDate) + \"天\";\n      } else {\n        return \"<b>尚未開始託管</b>\";\n      }\n    };\n    gantt.templates.progress_text = (start, end, task) =>\n      \"<span class='progress_text'>\" +\n      gantt.getChildren(task.id).length +\n      \" 直推 </span>\";\n    gantt.templates.link_class = (link) => {\n      const LINK_TABLE = {\n        1: \"first-link\",\n        2: \"second-link\",\n        3: \"third-link\",\n      };\n      return LINK_TABLE[link.source] ?? \"\";\n    };\n    gantt.templates.grid_folder = (item) =>\n      `<div class='gantt_tree_icon gantt_folder_${\n        item.$open ? \"open\" : \"closed\"\n      } ${item.level}'></div>`;\n    gantt.templates.grid_file = (item) =>\n      `<div class='gantt_tree_icon gantt_file ${item.level}'></div>`;\n    gantt.templates.drag_link = (from, from_start, to, to_start) => {\n      from = gantt.getTask(from);\n      let text = `推薦人 > <b>${from.holder}</b> ${\n        from_start ? \"\" : \"結束\"\n      }<br/>`;\n      if (to) {\n        to = gantt.getTask(to);\n        text += `投資人 > <b>${to.holder}</b> ${to_start ? \"\" : \"結束\"} <br/>`;\n      }\n      return text;\n    };\n    gantt.templates.link_description = function (link) {\n      let from = gantt.getTask(link.source),\n        to = gantt.getTask(link.target),\n        types = gantt.config.links;\n\n      let from_start = link.type === types.start_to_start;\n      let to_start =\n        link.type === types.finish_to_start ||\n        link.type === types.start_to_start;\n      let text = `推薦人 <b>${from.holder}</b> ${\n        from_start ? \"\" : \"結束\"\n      } <br/>`;\n      text += `與 投資人 <b>${to.holder}</b> ${to_start ? \"\" : \"結束\"} <br/>`;\n      return text;\n    };\n\n    gantt.addTaskLayer({\n      renderer: {\n        render: function draw_profit(task) {\n          if (task.profit_date) {\n            const el = document.createElement(\"div\");\n            el.className = \"profit profit-marker\";\n            const sizes = gantt.getTaskPosition(task, task.profit_date);\n\n            el.style.left = sizes.left + \"px\";\n            el.style.top = sizes.top + \"px\";\n\n            el.setAttribute(\"data-taskId\", task.id);\n            return el;\n          }\n          return false;\n        },\n        // define getRectangle in order to hook layer with the smart rendering\n        getRectangle: function (task, view) {\n          if (task.profit_date) {\n            return gantt.getTaskPosition(task, task.profit_date);\n          }\n          return null;\n        },\n      },\n    });\n\n    gantt.attachEvent(\"onTaskLoading\", function (task) {\n      if (task.profit_date)\n        task.profit_date = gantt.date.parseDate(task.profit_date, \"xml_date\");\n      return true;\n    });\n\n    const { tasks } = this.props;\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    gantt.parse(tasks);\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const { zoom } = this.props;\n    this.setZoom(zoom);\n    return (\n      <div\n        ref={(input) => {\n          this.ganttContainer = input;\n        }}\n        style={{ width: \"100%\", height: \"100%\" }}\n      />\n    );\n  }\n}\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import { useState, useEffect } from \"react\";\n\nconst getOrientation = () => window.screen.orientation.type;\n\nconst useScreenOrientation = () => {\n  const [orientation, setOrientation] = useState(getOrientation());\n\n  const updateOrientation = (event) => {\n    setOrientation(getOrientation());\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"orientationchange\", updateOrientation);\n    return () => {\n      window.removeEventListener(\"orientationchange\", updateOrientation);\n    };\n  }, []);\n\n  return orientation;\n};\n\nexport default useScreenOrientation;\n","import React, { useState, useEffect } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport {\n  Menu,\n  ChevronRight,\n  SkipBack,\n  SkipForward,\n  Maximize,\n  ZoomIn,\n  ZoomOut,\n  Settings,\n} from \"react-feather\";\nimport fileDownloader from \"js-file-download\";\n\nimport useScreenOrientation from \"../../hooks/useScreenOrientation\";\nimport * as CONSTANT from \"../../utils/constant\";\nimport * as utils from \"../../utils\";\n\nconst Toolbar = ({ handleImportData }) => {\n  const screenOrientation = useScreenOrientation();\n  const [isFullGrid, setIsFullGrid] = useState(true);\n\n  const foldMenu = () => {\n    gantt.getGridColumn(\"wbs\").hide = true;\n    gantt.getGridColumn(\"start_date\").hide = true;\n    gantt.getGridColumn(\"amount\").hide = true;\n\n    gantt.config.grid_width = 150;\n  };\n  const unFoldMenu = () => {\n    gantt.getGridColumn(\"wbs\").hide = false;\n    gantt.getGridColumn(\"start_date\").hide = false;\n    gantt.getGridColumn(\"amount\").hide = false;\n\n    gantt.config.grid_width = 500;\n  };\n  const handleToggleGrid = () => {\n    setIsFullGrid(!isFullGrid);\n\n    if (isFullGrid) {\n      foldMenu();\n    } else {\n      unFoldMenu();\n    }\n    gantt.render();\n  };\n\n  const handleFullscreen = () => {\n    gantt.ext.fullscreen.expand();\n  };\n\n  const restoreData = () => {\n    localStorage.setItem(\"hiifx_data\", JSON.stringify(CONSTANT.INIT_DATA));\n    window.location.reload();\n  };\n  const restorePriceHistory = () => {\n    localStorage.removeItem(\"hiifx_history_price\");\n    window.location.reload();\n  };\n\n  const exportAndDownload = () => {\n    const result = gantt.serialize();\n\n    fileDownloader(\n      JSON.stringify(result),\n      `${new Date()\n        .toISOString()\n        .substring(0, 10)\n        .split(\"-\")\n        .join(\"\")}_海匯團隊.json`\n    );\n  };\n\n  const handleExportModel = () => {\n    window.importBox = gantt.modalbox({\n      title: \"設定\",\n      text: `\n            <label for=\"data-import\" class=\"data-import-label\">\n              匯入紀錄\n            </label>\n            <input id=\"data-import\" type=\"file\" onchange=\"gantt.importFromJSON(this)\" accept=\"application/json\" />\n            `,\n      width: \"500px\",\n      buttons: [\n        {\n          label: \"匯出紀錄\",\n          css: \"data_export_btn\",\n          value: \"export\",\n        },\n        {\n          label: \"重設紀錄\",\n          css: \"data_export_restore\",\n          value: \"restore\",\n        },\n        {\n          label: \"重設匯率\",\n          css: \"price_history_restore\",\n          value: \"price_restore\",\n        },\n        { label: \"取消\", css: \"data_cancel_btn\", value: \"cancel\" },\n      ],\n      callback: function (action) {\n        if (action === \"price_restore\") {\n          restorePriceHistory();\n        }\n        if (action === \"restore\") {\n          restoreData();\n        }\n        if (action === \"export\") {\n          exportAndDownload();\n        }\n        if (action === \"cancel\") {\n          // gantt.alert(action);\n        }\n      },\n    });\n  };\n\n  useEffect(() => {\n    const importFromJSON = (event) => {\n      if (event.files.length > 0) {\n        const FILE_READER = new FileReader();\n\n        FILE_READER.addEventListener(\"load\", () => {\n          try {\n            const NEW_DATA = JSON.parse(FILE_READER.result);\n            const validatedNewData = utils.sterilizateData(NEW_DATA);\n\n            localStorage.setItem(\n              \"hiifx_data\",\n              JSON.stringify(validatedNewData)\n            );\n            gantt.message({\n              type: \"info\",\n              text: \"匯入成功~~🎉🎉\",\n            });\n\n            handleImportData();\n          } catch (err) {\n            gantt.message({\n              type: \"error\",\n              text: \"匯入資料格式錯誤 😱😱\",\n            });\n          }\n        });\n        FILE_READER.addEventListener(\"error\", () => {\n          gantt.message({\n            type: \"error\",\n            text: \"匯入資料時發生錯誤 😱😱\",\n          });\n        });\n\n        FILE_READER.readAsText(event.files[0]);\n      }\n    };\n\n    gantt.importFromJSON = importFromJSON;\n  }, [handleImportData]);\n\n  useEffect(() => {\n    gantt.attachEvent(\"onGanttReady\", function () {\n      if (\n        screenOrientation !== \"portrait-primary\" &&\n        window.innerWidth <= 800\n      ) {\n        setIsFullGrid(false);\n        foldMenu();\n      } else {\n        setIsFullGrid(true);\n        unFoldMenu();\n      }\n      gantt.render();\n    });\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"tool-bar\">\n      <div className=\"logo-wrapper noselect\" onClick={handleToggleGrid}>\n        {isFullGrid ? <Menu /> : <ChevronRight />}\n        <b className=\"short-LOGO\">海匯</b>\n        <b className=\"full-LOGO\">海匯團隊資金管理工具</b>\n      </div>\n      <div className=\"tool-wrapper\">\n        <div className=\"action-icon-wrapper\">\n          <SkipBack onClick={() => gantt.undo()} />\n          <SkipForward onClick={() => gantt.redo()} />\n        </div>\n        <div className=\"zoom-icon-wrapper\">\n          <ZoomIn onClick={() => gantt.ext.zoom.zoomIn()} />\n          <ZoomOut onClick={() => gantt.ext.zoom.zoomOut()} />\n        </div>\n        <div className=\"fullscreen-icon-wrapper\" onClick={handleFullscreen}>\n          <Maximize />\n        </div>\n        <div className=\"export-icon-wrapper\" onClick={handleExportModel}>\n          <Settings />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport Flag from \"react-world-flags\";\n\nconst Converter = ({ lastDate, lastSellPrice }) => {\n  const [isReady, setIsReady] = useState(false);\n  const [exchangeBase, setExchangeBase] = useState(\"USD\");\n  const [amount, setAmount] = useState(1500);\n\n  const handleAmountUpdate = (event) => {\n    event.preventDefault();\n    setAmount(event.target.value);\n  };\n  const handleFlagChange = () => {\n    if (exchangeBase === \"USD\") {\n      setExchangeBase(\"TWD\");\n    } else {\n      setExchangeBase(\"USD\");\n    }\n  };\n\n  const renderResult = () => {\n    if (exchangeBase === \"USD\") {\n      const originResult = Math.round(amount * lastSellPrice * 1000) / 1000;\n      return `${new Intl.NumberFormat(\"en-IN\").format(originResult)} TWD`;\n    } else {\n      const originResult = Math.round((amount / lastSellPrice) * 1000) / 1000;\n      return `${new Intl.NumberFormat(\"en-IN\").format(originResult)} USD`;\n    }\n  };\n\n  useEffect(() => {\n    if ((lastDate, lastSellPrice)) {\n      setIsReady(true);\n    }\n  }, [lastDate, lastSellPrice]);\n\n  return (\n    <div className=\"converter-section\">\n      <div className=\"info-section\">\n        <p className=\"title\">\n          <a\n            href=\"https://rate.bot.com.tw/xrt/quote/l6m/USD-TWD\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            className=\"bank-link\"\n          >\n            臺灣銀行\n          </a>\n          美元對新台幣匯率\n        </p>\n        {isReady ? (\n          <p>\n            <b>{`${lastDate} ${lastSellPrice}`}</b>\n          </p>\n        ) : (\n          <p>匯率載入中</p>\n        )}\n      </div>\n      <div className=\"quick-amount-section\">\n        {[1500, 3000, 4500, 10000].map((itemAmount) => (\n          <button\n            key={itemAmount}\n            className={clsx(\n              itemAmount === amount && \"disabled\",\n              \"quick-amount-pill\"\n            )}\n            onClick={() => setAmount(itemAmount)}\n          >\n            {new Intl.NumberFormat(\"en-IN\").format(itemAmount)}\n          </button>\n        ))}\n      </div>\n      <div className=\"amount-wrapper\">\n        <input\n          className=\"amount-input\"\n          type=\"number\"\n          placeholder=\"金額\"\n          value={amount}\n          onChange={handleAmountUpdate}\n        />\n        <Flag\n          code={exchangeBase === \"USD\" ? 840 : 158}\n          onClick={handleFlagChange}\n          className=\"flag-button\"\n        />\n      </div>\n\n      <div className=\"friendly-info-section\">\n        <p className=\"convert-hint\">\n          {new Intl.NumberFormat(\"en-IN\").format(amount)} {exchangeBase}{\" \"}\n          <b>=</b>\n        </p>\n        <span className=\"converted-result\">{renderResult()}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Converter;\n","import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport Chart from \"react-apexcharts\";\n\nimport Converter from \"./converter\";\nimport * as UTILS from \"../../utils\";\n\nconst CurrencyPriceArea = ({ mode }) => {\n  const [lastDate, setLastDate] = useState(\"\");\n  const [lastSellPrice, setLastSellPrice] = useState(0);\n  const [dateHistory, setDateHistory] = useState([]);\n  const [buyPriceHistory, setBuyPriceHistory] = useState([]);\n  const [sellPriceHistory, setSellPriceHistory] = useState([]);\n\n  useEffect(() => {\n    const init = async () => {\n      const USD_HISTORY = await UTILS.getUSDHistoryPrice();\n\n      const {\n        lastDate,\n        lastSellPrice,\n        dateHistory,\n        buyPriceHistory,\n        sellPriceHistory,\n      } = UTILS.priceHistoryFormatter(USD_HISTORY);\n\n      setLastDate(lastDate);\n      setLastSellPrice(lastSellPrice);\n      setDateHistory(dateHistory);\n      setBuyPriceHistory(buyPriceHistory);\n      setSellPriceHistory(sellPriceHistory);\n    };\n\n    init();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div\n      className={clsx(\n        mode === \"converter\" && \"showConverter\",\n        \"currency-price-area\"\n      )}\n    >\n      <h3>臺灣銀行 - 每日匯率</h3>\n\n      <div className=\"content-wrapper\">\n        <div className=\"chart-section\">\n          <Chart\n            options={{\n              xaxis: {\n                categories: dateHistory,\n              },\n            }}\n            series={[\n              {\n                name: \"臺灣銀行買入價格\",\n                data: buyPriceHistory,\n              },\n              {\n                name: \"臺灣銀行賣出價格\",\n                data: sellPriceHistory,\n              },\n            ]}\n            type=\"line\"\n            width=\"100%\"\n            height={250}\n          />\n        </div>\n\n        <Converter lastDate={lastDate} lastSellPrice={lastSellPrice} />\n      </div>\n    </div>\n  );\n};\n\nexport default CurrencyPriceArea;\n","import CurrencyPriceArea from \"./CurrencyPriceArea\";\nimport \"./CurrencyPriceArea.css\";\nexport default CurrencyPriceArea;\n","import React from \"react\";\n\nconst MessageArea = ({ messages }) => {\n  const renderMessageArea = messages.map(({ message }) => {\n    return <li key={Math.random()}>{message}</li>;\n  });\n\n  return (\n    <div className=\"message-area\">\n      <h3>操作紀錄</h3>\n      <ul>{renderMessageArea}</ul>\n    </div>\n  );\n};\n\nMessageArea.defaultProps = {\n  messages: [],\n};\n\nexport default MessageArea;\n","import MessageArea from './MessageArea';\nimport './MessageArea.css';\nexport default MessageArea;","import React, { Component } from \"react\";\nimport clsx from \"clsx\";\nimport { gantt } from \"dhtmlx-gantt\";\n\nimport GanttChart from \"./components/Gantt\";\nimport Toolbar from \"./components/Toolbar\";\nimport CurrencyPriceArea from \"./components/CurrencyPriceArea\";\nimport MessageArea from \"./components/MessageArea\";\nimport * as CONSTANT from \"./utils/constant\";\nimport * as utils from \"./utils\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    isReady: false,\n    isUpdating: false,\n    tasks: null,\n    currentZoom: \"月\",\n    currentMode: \"chart\", // chart, converter\n    messages: [],\n  };\n\n  addMessage(message) {\n    const maxLogLength = 5;\n    const newMessate = { message };\n    const messages = [newMessate, ...this.state.messages];\n\n    if (messages.length > maxLogLength) {\n      messages.length = maxLogLength;\n    }\n    this.setState({ messages });\n  }\n\n  logDataUpdate = (type, action, item, id) => {\n    if (this.state.isUpdating === false) {\n      this.setState({ isUpdating: true });\n      let holder = item && item.holder ? ` (${item.holder})` : \"\";\n      let message = `${type} ${action}: ${id} ${holder}`;\n      if (type === \"link\" && action !== \"delete\") {\n        message += ` ( source: ${item.source}, target: ${item.target} )`;\n      }\n      this.addMessage(message);\n      const { data: currentData, links: currentLinks } = gantt.serialize();\n      const NEW_DATA = {\n        data: currentData.map((newItem) => ({\n          ...newItem,\n          end_date: undefined,\n          directMember: gantt.getChildren(newItem.id).length ?? 0,\n          directMemberAmount: utils.getFirstLayerAmount(newItem.id) ?? 0,\n          teamMember: utils.getAllLayerAmount(newItem.id)[\"teamMember\"],\n          teamAmount: utils.getAllLayerAmount(newItem.id)[\"teamAmount\"],\n          level: utils.getSelfLevel(newItem.id),\n          duration: 35,\n          progress: utils.getSelfProgress(newItem.start_date) ?? 0.6,\n          $open: true,\n        })),\n        links: currentLinks,\n      };\n\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(NEW_DATA));\n      this.setState({ isUpdating: false });\n    }\n  };\n\n  updateImportData = () => {\n    this.setState({ isReady: false });\n    const LOCAL_DATA = localStorage.getItem(\"hiifx_data\");\n    this.setState({ tasks: JSON.parse(LOCAL_DATA), isReady: true });\n    gantt.modalbox.hide(window.importBox);\n  };\n\n  handleToggleMode = () => {\n    if (this.state.currentMode === \"chart\") {\n      this.setState({ currentMode: \"converter\" });\n    } else {\n      this.setState({ currentMode: \"chart\" });\n    }\n  };\n\n  componentDidMount() {\n    const LOCAL_DATA = localStorage.getItem(\"hiifx_data\");\n    if (!!LOCAL_DATA) {\n      this.setState({ tasks: JSON.parse(LOCAL_DATA), isReady: true });\n    } else {\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(CONSTANT.INIT_DATA));\n      this.setState({ tasks: CONSTANT.INIT_DATA, isReady: true });\n    }\n  }\n\n  render() {\n    const { isReady, tasks, currentZoom, messages, currentMode } = this.state;\n\n    return (\n      <div>\n        <div className=\"tool-bar-container\">\n          <Toolbar handleImportData={this.updateImportData} />\n        </div>\n        <div id=\"rotate-hint\">\n          <div id=\"rotate-icon-wrapper\" />\n          <div id=\"rotate-hint-wrapper\">請翻轉手機</div>\n        </div>\n        <div\n          className={clsx(\n            currentMode === \"converter\" && \"showConverter\",\n            \"gantt-container\"\n          )}\n        >\n          {isReady && (\n            <GanttChart\n              tasks={tasks}\n              zoom={currentZoom}\n              onDataUpdated={this.logDataUpdate}\n            />\n          )}\n          <i\n            className={clsx(\n              currentMode === \"chart\" ? \"fa-university\" : \"fa-home\",\n              \"fa gantt-converter\"\n            )}\n            onClick={this.handleToggleMode}\n          />\n        </div>\n        <div\n          className={clsx(\n            currentMode === \"converter\" && \"showConverter\",\n            \"tool-section\"\n          )}\n        >\n          <CurrencyPriceArea mode={currentMode} />\n          <MessageArea messages={messages} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/hiifx-sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n"],"sourceRoot":""}