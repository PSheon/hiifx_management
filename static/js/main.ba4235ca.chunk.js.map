{"version":3,"sources":["components/Gantt/Gantt.js","components/Gantt/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","components/MessageArea/MessageArea.js","components/MessageArea/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Gantt","props","dataProcessor","initZoom","gantt","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","onDataUpdated","this","createDataProcessor","type","action","item","id","Promise","resolve","reject","nextProps","startDateEditor","map_to","min","Date","max","dateToStr","date","date_to_str","config","task_date","addMarker","start_date","css","text","title","quickinfo_buttons","reorder_grid_columns","order_branch","keep_grid_width","xml_date","columns","label","align","max_width","resize","template","getWBSCode","min_width","tree","editor","width","lightbox","sections","height","allow_root","root_label","start","end","ev","holder","locale","labels","icon_save","icon_cancel","attachEvent","amount","message","templates","quick_info_title","task","quick_info_content","scale_cell_class","isWorkTime","timeline_cell_class","task_text","duration","leftside_text","entrustInDate","getTime","Math","floor","tasks","ganttContainer","initGanttDataProcessor","parse","destructor","setZoom","ref","input","style","Component","Toolbar","onZoomChange","handleZoomChange","e","target","zoomRadios","map","isActive","key","className","checked","onChange","onClick","undo","redo","fullscreen","expand","getGridColumn","hide","grid_width","render","MessageArea","messages","random","defaultProps","prototype","Format","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","INIT_DATA","data","progress","$open","parent","links","source","App","state","isReady","isUpdating","currentZoom","logDataUpdate","setState","addMessage","NEW_DATA","getTaskByTime","undefined","getLinks","localStorage","setItem","JSON","stringify","LOCAL_DATA","getItem","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ba4235ca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_fullscreen.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_quick_info.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_undo.js\";\nimport \"dhtmlx-gantt/codebase/locale/locale_cn.js\";\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\n\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.initZoom();\n  }\n\n  // instance of gantt.dataProcessor\n  dataProcessor = null;\n\n  initZoom() {\n    gantt.ext.zoom.init({\n      levels: [\n        {\n          name: \"日\",\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: \"week\", step: 1, format: \"Week #%W\" },\n            { unit: \"day\", step: 1, format: \"%d %M\" },\n          ],\n        },\n        {\n          name: \"月\",\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: \"month\", step: 1, format: \"%F\" },\n            { unit: \"week\", step: 1, format: \"#%W\" },\n          ],\n        },\n      ],\n    });\n  }\n\n  setZoom(value) {\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\n     * type: \"task\"|\"link\"\n     * action: \"create\"|\"update\"|\"delete\"\n     * item: data object object\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        }\n\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n        return resolve();\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    const holderEditor = { type: \"text\", map_to: \"holder\" };\n    const amountEditor = { type: \"text\", map_to: \"amount\" };\n    const durationEditor = {\n      type: \"number\",\n      map_to: \"duration\",\n      min: 25,\n      max: 50,\n    };\n    const startDateEditor = {\n      type: \"date\",\n      map_to: \"start_date\",\n      min: new Date(2018, 0, 1),\n      max: new Date(),\n    };\n    const dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n    gantt.addMarker({\n      start_date: new Date(),\n      css: \"today\",\n      text: \"今天\",\n      title: dateToStr(new Date()),\n    });\n\n    gantt.config.quickinfo_buttons = [\"icon_edit\", \"icon_delete\"];\n    gantt.config.reorder_grid_columns = true;\n    gantt.config.order_branch = true;\n    gantt.config.keep_grid_width = true;\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    gantt.config.columns = [\n      {\n        name: \"wbs\",\n        label: \"編號\",\n        align: \"center\",\n        max_width: 64,\n        resize: true,\n        template: gantt.getWBSCode,\n      },\n      {\n        name: \"holder\",\n        label: \"投資人\",\n        min_width: 150,\n        max_width: 200,\n        tree: true,\n        resize: true,\n        editor: holderEditor,\n      },\n      {\n        name: \"amount\",\n        label: \"投資額\",\n        align: \"center\",\n        min_width: 40,\n        resize: true,\n        editor: amountEditor,\n      },\n      {\n        name: \"start_date\",\n        label: \"初始託管日\",\n        align: \"center\",\n        max_width: 96,\n        resize: true,\n        editor: startDateEditor,\n      },\n      {\n        name: \"duration\",\n        label: \"託管時間\",\n        align: \"center\",\n        max_width: 64,\n        resize: true,\n        editor: durationEditor,\n      },\n      { name: \"add\", width: 40 },\n    ];\n    gantt.config.lightbox.sections = [\n      {\n        name: \"holder\",\n        height: 30,\n        map_to: \"holder\",\n        type: \"textarea\",\n      },\n      {\n        name: \"amount\",\n        height: 30,\n        map_to: \"amount\",\n        type: \"textarea\",\n      },\n      {\n        name: \"parent\",\n        type: \"parent\",\n        allow_root: \"true\",\n        root_label: \"無推薦經紀人\",\n        template: (start, end, ev) =>\n          ev.id === 0 ? \"無推薦經紀人\" : ev.holder,\n      },\n      { name: \"time\", map_to: \"auto\", type: \"duration\" },\n    ];\n    gantt.locale.labels[\"section_holder\"] = \"投資人\";\n    gantt.locale.labels[\"section_amount\"] = \"投資額\";\n    gantt.locale.labels[\"section_parent\"] = \"推薦經紀人\";\n    gantt.locale.labels[\"section_time\"] = \"託管時間\";\n    gantt.locale.labels[\"icon_delete\"] = \"刪除紀錄\";\n    gantt.locale.labels[\"icon_edit\"] = \"編輯紀錄\";\n    gantt.locale.labels.icon_save = \"儲資金紀錄\";\n    gantt.locale.labels.icon_cancel = \"取消\";\n\n    gantt.attachEvent(\"onLightboxSave\", function (id, item) {\n      if (!item.holder) {\n        gantt.message({ type: \"error\", text: \"請輸入投資人\" });\n        return false;\n      }\n      if (!item.amount) {\n        gantt.message({\n          type: \"error\",\n          text: \"請輸入投資額\",\n        });\n        return false;\n      }\n      return true;\n    });\n\n    gantt.templates.quick_info_title = (start, end, task) => task.holder;\n    gantt.templates.quick_info_content = (start, end, task) =>\n      `${task.holder} ${task.amount}`;\n    gantt.templates.scale_cell_class = function (date) {\n      if (!gantt.isWorkTime(date)) {\n        return \"weekend\";\n      }\n    };\n    gantt.templates.timeline_cell_class = function (task, date) {\n      if (!gantt.isWorkTime({ task: task, date: date })) {\n        return \"weekend\";\n      }\n    };\n    gantt.templates.task_text = (start, end, task) =>\n      `<b>${task.holder}</b> > <b>${task.amount}</b> 美金 ${task.duration} 天 `;\n    gantt.templates.leftside_text = function (start, end, task) {\n      const entrustInDate =\n        (new Date().getTime() - new Date(start).getTime()) / (1000 * 3600 * 24);\n      if (entrustInDate > 0) {\n        return \"<b>託管: </b>\" + Math.floor(entrustInDate) + \"天\";\n      } else {\n        return \"<b>尚未開始託管</b>\";\n      }\n    };\n\n    const { tasks } = this.props;\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    gantt.parse(tasks);\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const { zoom } = this.props;\n    this.setZoom(zoom);\n    return (\n      <div\n        ref={(input) => {\n          this.ganttContainer = input;\n        }}\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    );\n  }\n}\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport { SkipBack, SkipForward, Maximize } from \"react-feather\";\n\nconst Toolbar = ({ onZoomChange, zoom }) => {\n  const handleZoomChange = (e) => {\n    if (onZoomChange) {\n      onZoomChange(e.target.value);\n    }\n  };\n\n  const handleFullscreen = () => {\n    gantt.ext.fullscreen.expand();\n\n    gantt.getGridColumn(\"wbs\").hide = true;\n    gantt.getGridColumn(\"duration\").hide = true;\n    gantt.getGridColumn(\"start_date\").hide = true;\n\n    gantt.config.grid_width = 150;\n\n    gantt.render();\n  };\n\n  const zoomRadios = [\"日\", \"月\"].map((value) => {\n    const isActive = zoom === value;\n    return (\n      <label\n        key={value}\n        className={`radio-label ${isActive ? \"radio-label-active\" : \"\"}`}\n      >\n        <input\n          type=\"radio\"\n          checked={isActive}\n          onChange={handleZoomChange}\n          value={value}\n        />\n        {value}\n      </label>\n    );\n  });\n\n  return (\n    <div className=\"tool-bar\">\n      <div>\n        <b>海匯團隊資金管理工具</b>\n      </div>\n      <div className=\"tool-wrapper\">\n        <div className=\"action-icon-wrapper\">\n          <SkipBack onClick={() => gantt.undo()} />\n          <SkipForward onClick={() => gantt.redo()} />\n        </div>\n        <div className=\"fullscreen-icon-wrapper\" onClick={handleFullscreen}>\n          <Maximize />\n        </div>\n        <div>{zoomRadios}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import React, { Component } from \"react\";\n\nclass MessageArea extends Component {\n  render() {\n    const messages = this.props.messages.map(({ message }) => {\n      return <li key={Math.random()}>{message}</li>;\n    });\n\n    return (\n      <div className=\"message-area\">\n        <h3>操作紀錄：</h3>\n        <ul>{messages}</ul>\n      </div>\n    );\n  }\n}\n\nMessageArea.defaultProps = {\n  messages: [],\n};\n\nexport default MessageArea;\n","import MessageArea from './MessageArea';\nimport './MessageArea.css';\nexport default MessageArea;","import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport GanttChart from \"./components/Gantt\";\nimport Toolbar from \"./components/Toolbar\";\nimport MessageArea from \"./components/MessageArea\";\nimport \"./App.css\";\n\nDate.prototype.Format = function (fmt) {\n  //author: meizz\n  var o = {\n    \"M+\": this.getMonth() + 1, //月份\n    \"d+\": this.getDate(), //日\n    \"h+\": this.getHours(), //小时\n    \"m+\": this.getMinutes(), //分\n    \"s+\": this.getSeconds(), //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n    S: this.getMilliseconds(), //毫秒\n  };\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(\n      RegExp.$1,\n      (this.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  for (var k in o)\n    if (new RegExp(\"(\" + k + \")\").test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      );\n  return fmt;\n};\n\nconst INIT_DATA = {\n  data: [\n    {\n      id: 1,\n      holder: \"自己\",\n      start_date: \"2020-01-01\",\n      amount: 1500,\n      duration: 30,\n      progress: 0.6,\n      $open: true,\n    },\n    {\n      id: 2,\n      holder: \"投資人 #1\",\n      start_date: \"2020-01-01\",\n      parent: 1,\n      amount: 1500,\n      duration: 30,\n      progress: 0.4,\n    },\n  ],\n  links: [{ id: 1, source: 1, target: 2, type: \"0\" }],\n};\nclass App extends Component {\n  state = {\n    isReady: false,\n    isUpdating: false,\n    tasks: null,\n    currentZoom: \"月\",\n    messages: [],\n  };\n\n  addMessage(message) {\n    const maxLogLength = 5;\n    const newMessate = { message };\n    const messages = [newMessate, ...this.state.messages];\n\n    if (messages.length > maxLogLength) {\n      messages.length = maxLogLength;\n    }\n    this.setState({ messages });\n  }\n\n  logDataUpdate = (type, action, item, id) => {\n    if (this.state.isUpdating === false) {\n      this.setState({ isUpdating: true });\n      let holder = item && item.holder ? ` (${item.holder})` : \"\";\n      let message = `${type} ${action}: ${id} ${holder}`;\n      if (type === \"link\" && action !== \"delete\") {\n        message += ` ( source: ${item.source}, target: ${item.target} )`;\n      }\n      this.addMessage(message);\n      const NEW_DATA = {\n        data: gantt.getTaskByTime().map((item) => ({\n          id: item.id,\n          holder: item.holder,\n          amount: item.amount ?? 0,\n          start_date: new Date(item.start_date).Format(\"yyyy-MM-dd\"),\n          duration: item.duration ?? 35,\n          progress: item.progress ?? 0.6,\n          parent: item.parent ?? undefined,\n          $open: true,\n        })),\n        links: gantt.getLinks(),\n      };\n\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(NEW_DATA));\n      this.setState({ isUpdating: false });\n    }\n  };\n\n  handleZoomChange = (zoom) => {\n    this.setState({\n      currentZoom: zoom,\n    });\n  };\n\n  componentDidMount() {\n    const LOCAL_DATA = localStorage.getItem(\"hiifx_data\");\n    if (!!LOCAL_DATA) {\n      this.setState({ tasks: JSON.parse(LOCAL_DATA), isReady: true });\n    } else {\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(INIT_DATA));\n      this.setState({ tasks: INIT_DATA, isReady: true });\n    }\n  }\n\n  render() {\n    const { isReady, tasks, currentZoom, messages } = this.state;\n\n    return (\n      <div>\n        <div className=\"zoom-bar\">\n          <Toolbar zoom={currentZoom} onZoomChange={this.handleZoomChange} />\n        </div>\n        <div className=\"gantt-container\">\n          {isReady && (\n            <GanttChart\n              tasks={tasks}\n              zoom={currentZoom}\n              onDataUpdated={this.logDataUpdate}\n            />\n          )}\n        </div>\n        <MessageArea messages={messages} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n"],"sourceRoot":""}