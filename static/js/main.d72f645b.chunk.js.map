{"version":3,"sources":["utils/index.js","utils/constant.js","components/Gantt/Gantt.js","components/Gantt/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","components/MessageArea/MessageArea.js","components/MessageArea/index.js","App.js","registerServiceWorker.js","index.js"],"names":["getAllLayerAmount","uid","children","childrenAmount","findAllChildren","gantt","getChildren","forEach","item","userInfo","getTask","push","teamMember","length","teamAmount","reduce","accumulator","currentValue","Number","getFirstLayerAmount","childrenID","total","childID","amount","holderEditor","type","map_to","amountEditor","startDateEditor","min","Date","max","dateToStr","date","date_to_str","config","task_date","INIT_DATA","data","id","holder","start_date","duration","progress","$open","parent","links","source","target","ZOOM_CONFIG","levels","name","scale_height","min_column_width","scales","unit","step","format","endDate","add","height","Gantt","props","dataProcessor","initZoom","ext","zoom","init","CONSTANT","value","setLevel","onDataUpdated","this","createDataProcessor","action","Promise","resolve","reject","nextProps","addMarker","css","text","title","utils","quickinfo_buttons","reorder_grid_columns","order_branch","keep_grid_width","xml_date","columns","label","align","max_width","resize","template","getWBSCode","min_width","tree","editor","width","lightbox","sections","allow_root","root_label","start","end","ev","locale","labels","icon_save","icon_cancel","attachEvent","message","templates","task_class","task","0","1","2","3","match","quick_info_title","quick_info_content","scale_cell_class","getDay","timeline_cell_class","task_text","rightside_text","entrustInDate","getTime","Math","floor","progress_text","link_class","link","grid_folder","level","grid_file","tasks","ganttContainer","initGanttDataProcessor","parse","destructor","setZoom","ref","input","style","Component","Toolbar","className","onClick","undo","redo","zoomIn","zoomOut","fullscreen","expand","getGridColumn","hide","grid_width","render","MessageArea","renderMessageArea","messages","map","key","random","defaultProps","prototype","Format","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","App","state","isReady","isUpdating","currentZoom","logDataUpdate","setState","addMessage","NEW_DATA","getTaskByTime","directMember","directMemberAmount","undefined","getLinks","localStorage","setItem","JSON","stringify","LOCAL_DATA","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d72f645b.chunk.js","sourcesContent":["import { gantt } from \"dhtmlx-gantt\";\n\nexport const getAllLayerAmount = (uid) => {\n  let children = [];\n  let childrenAmount = [];\n\n  const findAllChildren = (uid) => {\n    gantt.getChildren(uid).forEach((item) => {\n      const userInfo = gantt.getTask(item);\n      children.push(userInfo[\"holder\"]);\n      childrenAmount.push(userInfo[\"amount\"]);\n      findAllChildren(item);\n    });\n  };\n\n  findAllChildren(uid);\n\n  return {\n    teamMember: children.length,\n    teamAmount: childrenAmount.reduce(\n      (accumulator, currentValue) => accumulator + Number(currentValue),\n      0\n    ),\n  };\n};\n\nexport const getFirstLayerAmount = (uid) => {\n  const childrenID = gantt.getChildren(uid);\n  let total = 0;\n  childrenID.forEach((childID) => {\n    const userInfo = gantt.getTask(childID);\n    total += Number(userInfo.amount ?? 0);\n  });\n\n  return total;\n};\n\nexport const getSelfLevel = (uid) => {\n  // TODO implement this function\n  // retrun ['trader', 'ib', 'mib', 'pib']\n  return \"trader\";\n};\n\nexport const holderEditor = { type: \"text\", map_to: \"holder\" };\nexport const amountEditor = { type: \"text\", map_to: \"amount\" };\nexport const durationEditor = {\n  type: \"number\",\n  map_to: \"duration\",\n  min: 0,\n  max: 50,\n};\nexport const startDateEditor = {\n  type: \"date\",\n  map_to: \"start_date\",\n  min: new Date(2018, 0, 1),\n  max: new Date(),\n};\n\nexport const dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n","import { gantt } from \"dhtmlx-gantt\";\n\nexport const INIT_DATA = {\n  data: [\n    {\n      id: 1,\n      holder: \"自己\",\n      start_date: \"2020-01-01\",\n      amount: 1500,\n      duration: 30,\n      progress: 0.6,\n      $open: true,\n    },\n    {\n      id: 2,\n      holder: \"投資人 #1\",\n      start_date: \"2020-01-01\",\n      parent: 1,\n      amount: 1500,\n      duration: 30,\n      progress: 0.4,\n    },\n  ],\n  links: [{ id: 1, source: 1, target: 2, type: \"0\" }],\n};\n\nexport const ZOOM_CONFIG = {\n  levels: [\n    {\n      name: \"日\",\n      scale_height: 27,\n      min_column_width: 80,\n      scales: [{ unit: \"day\", step: 1, format: \"%d %M\" }],\n    },\n    {\n      name: \"週\",\n      scale_height: 50,\n      min_column_width: 50,\n      scales: [\n        {\n          unit: \"week\",\n          step: 1,\n          format: function (date) {\n            var dateToStr = gantt.date.date_to_str(\"%d %M\");\n            var endDate = gantt.date.add(date, -6, \"day\");\n            var weekNum = gantt.date.date_to_str(\"%W\")(date);\n            return (\n              \"#\" +\n              weekNum +\n              \", \" +\n              dateToStr(date) +\n              \" - \" +\n              dateToStr(endDate)\n            );\n          },\n        },\n        { unit: \"day\", step: 1, format: \"%j %D\" },\n      ],\n    },\n    {\n      name: \"月\",\n      scale_height: 50,\n      min_column_width: 120,\n      scales: [\n        { unit: \"month\", format: \"%F, %Y\" },\n        { unit: \"week\", format: \"Week #%W\" },\n      ],\n    },\n    {\n      name: \"季\",\n      height: 50,\n      min_column_width: 90,\n      scales: [\n        { unit: \"month\", step: 1, format: \"%M\" },\n        {\n          unit: \"quarter\",\n          step: 1,\n          format: function (date) {\n            var dateToStr = gantt.date.date_to_str(\"%M\");\n            var endDate = gantt.date.add(\n              gantt.date.add(date, 3, \"month\"),\n              -1,\n              \"day\"\n            );\n            return dateToStr(date) + \" - \" + dateToStr(endDate);\n          },\n        },\n      ],\n    },\n    {\n      name: \"年\",\n      scale_height: 50,\n      min_column_width: 30,\n      scales: [{ unit: \"year\", step: 1, format: \"%Y\" }],\n    },\n  ],\n};\n","import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_fullscreen.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_quick_info.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_undo.js\";\nimport \"dhtmlx-gantt/codebase/locale/locale_cn.js\";\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\n\nimport * as utils from \"../../utils\";\nimport * as CONSTANT from \"../../utils/constant\";\n\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.initZoom();\n  }\n\n  // instance of gantt.dataProcessor\n  dataProcessor = null;\n\n  initZoom() {\n    gantt.ext.zoom.init(CONSTANT.ZOOM_CONFIG);\n  }\n\n  setZoom(value) {\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\n     * type: \"task\"|\"link\"\n     * action: \"create\"|\"update\"|\"delete\"\n     * item: data object object\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        }\n\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n        return resolve();\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    gantt.addMarker({\n      start_date: new Date(),\n      css: \"today\",\n      text: \"今天\",\n      title: utils.dateToStr(new Date()),\n    });\n\n    gantt.config.quickinfo_buttons = [\"icon_edit\", \"icon_delete\"];\n    gantt.config.reorder_grid_columns = true;\n    gantt.config.order_branch = true;\n    gantt.config.keep_grid_width = true;\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    gantt.config.columns = [\n      {\n        name: \"wbs\",\n        label: \"編號\",\n        align: \"center\",\n        max_width: 64,\n        resize: true,\n        template: gantt.getWBSCode,\n      },\n      {\n        name: \"holder\",\n        label: \"投資人\",\n        min_width: 150,\n        max_width: 200,\n        tree: true,\n        resize: true,\n        editor: utils.holderEditor,\n      },\n      {\n        name: \"amount\",\n        label: \"投資額\",\n        align: \"center\",\n        min_width: 40,\n        resize: true,\n        editor: utils.amountEditor,\n      },\n      {\n        name: \"start_date\",\n        label: \"初始託管日\",\n        align: \"center\",\n        max_width: 96,\n        resize: true,\n        editor: utils.startDateEditor,\n      },\n      { name: \"add\", width: 40 },\n    ];\n    gantt.config.lightbox.sections = [\n      {\n        name: \"holder\",\n        height: 30,\n        map_to: \"holder\",\n        type: \"textarea\",\n      },\n      {\n        name: \"amount\",\n        height: 30,\n        map_to: \"amount\",\n        type: \"textarea\",\n      },\n      {\n        name: \"parent\",\n        type: \"parent\",\n        allow_root: \"true\",\n        root_label: \"無推薦經紀人\",\n        template: (start, end, ev) =>\n          ev.id === 0 ? \"無推薦經紀人\" : ev.holder,\n      },\n      { name: \"time\", map_to: \"auto\", type: \"duration\" },\n    ];\n    gantt.locale.labels[\"section_holder\"] = \"投資人\";\n    gantt.locale.labels[\"section_amount\"] = \"投資額\";\n    gantt.locale.labels[\"section_parent\"] = \"推薦經紀人\";\n    gantt.locale.labels[\"section_time\"] = \"託管時間\";\n    gantt.locale.labels[\"icon_delete\"] = \"刪除紀錄\";\n    gantt.locale.labels[\"icon_edit\"] = \"編輯紀錄\";\n    gantt.locale.labels[\"confirm_link_deleting\"] = \"將被刪除\";\n    gantt.locale.labels.icon_save = \"儲資金紀錄\";\n    gantt.locale.labels.icon_cancel = \"取消\";\n\n    gantt.attachEvent(\"onLightboxSave\", function (id, item) {\n      if (!item.holder) {\n        gantt.message({ type: \"error\", text: \"請輸入投資人\" });\n        return false;\n      }\n      if (!item.amount) {\n        gantt.message({\n          type: \"error\",\n          text: \"請輸入投資額\",\n        });\n        return false;\n      }\n      return true;\n    });\n\n    gantt.templates.task_class = function (start, end, task) {\n      const currentLayer = (gantt.getWBSCode(task).match(/\\./g) || []).length;\n      const LAYER_TABLE = {\n        0: \"top-layer\",\n        1: \"first-layer\",\n        2: \"second-layer\",\n        3: \"third-layer\",\n      };\n      return LAYER_TABLE[currentLayer];\n    };\n    gantt.templates.quick_info_title = (start, end, task) => task.holder;\n    gantt.templates.quick_info_content = (start, end, task) =>\n      `階級： 尚未完成 </br>\n      自身綁定： ${task.amount} </br>\n      有效直推：${task[\"directMember\"]} </br>\n      直推綁定： ${task[\"directMemberAmount\"]} </br>\n      團隊人數： ${task[\"teamMember\"]} </br>\n      團隊綁定： ${task[\"teamAmount\"]} </br>\n      `;\n    gantt.templates.scale_cell_class = (date) => {\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return \"weekend\";\n      }\n    };\n    gantt.templates.timeline_cell_class = (task, date) => {\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return \"weekend\";\n      }\n    };\n    gantt.templates.task_text = (start, end, task) =>\n      `<b>${task.holder}</b> > <b>${task.amount}</b> 美金`;\n    gantt.templates.rightside_text = (start, end, task) => {\n      const entrustInDate =\n        (new Date().getTime() - new Date(start).getTime()) / (1000 * 3600 * 24);\n      if (entrustInDate > 0) {\n        return \"<b>託管 </b>\" + Math.floor(entrustInDate) + \"天\";\n      } else {\n        return \"<b>尚未開始託管</b>\";\n      }\n    };\n    gantt.templates.progress_text = (start, end, task) =>\n      \"<span class='progress_text'>\" +\n      gantt.getChildren(task.id).length +\n      \" 直推 </span>\";\n    gantt.templates.link_class = (link) => {\n      const LINK_TABLE = {\n        1: \"first-link\",\n        2: \"second-link\",\n        3: \"third-link\",\n      };\n      return LINK_TABLE[link.source] ?? \"\";\n    };\n    gantt.templates.grid_folder = (item) =>\n      `<div class='gantt_tree_icon gantt_folder_${\n        item.$open ? \"open\" : \"closed\"\n      } ${item.level}'></div>`;\n    gantt.templates.grid_file = (item) =>\n      `<div class='gantt_tree_icon gantt_file ${item.level}'></div>`;\n\n    const { tasks } = this.props;\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    gantt.parse(tasks);\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const { zoom } = this.props;\n    this.setZoom(zoom);\n    return (\n      <div\n        ref={(input) => {\n          this.ganttContainer = input;\n        }}\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    );\n  }\n}\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport {\n  SkipBack,\n  SkipForward,\n  Maximize,\n  ZoomIn,\n  ZoomOut,\n} from \"react-feather\";\n\nconst Toolbar = () => {\n  const handleFullscreen = () => {\n    gantt.ext.fullscreen.expand();\n\n    gantt.getGridColumn(\"wbs\").hide = true;\n    gantt.getGridColumn(\"duration\").hide = true;\n    gantt.getGridColumn(\"start_date\").hide = true;\n\n    gantt.config.grid_width = 150;\n\n    gantt.render();\n  };\n\n  return (\n    <div className=\"tool-bar\">\n      <div>\n        <b>海匯團隊資金管理工具</b>\n      </div>\n      <div className=\"tool-wrapper\">\n        <div className=\"action-icon-wrapper\">\n          <SkipBack onClick={() => gantt.undo()} />\n          <SkipForward onClick={() => gantt.redo()} />\n        </div>\n        <div className=\"zoom-icon-wrapper\">\n          <ZoomIn onClick={() => gantt.ext.zoom.zoomIn()} />\n          <ZoomOut onClick={() => gantt.ext.zoom.zoomOut()} />\n        </div>\n        <div className=\"fullscreen-icon-wrapper\" onClick={handleFullscreen}>\n          <Maximize />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import React from \"react\";\n\nconst MessageArea = ({ messages }) => {\n  const renderMessageArea = messages.map(({ message }) => {\n    return <li key={Math.random()}>{message}</li>;\n  });\n\n  return (\n    <div className=\"message-area\">\n      <h3>操作紀錄：</h3>\n      <ul>{renderMessageArea}</ul>\n    </div>\n  );\n};\n\nMessageArea.defaultProps = {\n  messages: [],\n};\n\nexport default MessageArea;\n","import MessageArea from './MessageArea';\nimport './MessageArea.css';\nexport default MessageArea;","import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport GanttChart from \"./components/Gantt\";\nimport Toolbar from \"./components/Toolbar\";\nimport MessageArea from \"./components/MessageArea\";\nimport * as CONSTANT from \"./utils/constant\";\nimport * as utils from \"./utils\";\nimport \"./App.css\";\n\nDate.prototype.Format = function (fmt) {\n  //author: meizz\n  var o = {\n    \"M+\": this.getMonth() + 1, //月份\n    \"d+\": this.getDate(), //日\n    \"h+\": this.getHours(), //小時\n    \"m+\": this.getMinutes(), //分\n    \"s+\": this.getSeconds(), //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n    S: this.getMilliseconds(), //毫秒\n  };\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(\n      RegExp.$1,\n      (this.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  for (var k in o)\n    if (new RegExp(\"(\" + k + \")\").test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      );\n  return fmt;\n};\n\nclass App extends Component {\n  state = {\n    isReady: false,\n    isUpdating: false,\n    tasks: null,\n    currentZoom: \"月\",\n    messages: [],\n  };\n\n  addMessage(message) {\n    const maxLogLength = 5;\n    const newMessate = { message };\n    const messages = [newMessate, ...this.state.messages];\n\n    if (messages.length > maxLogLength) {\n      messages.length = maxLogLength;\n    }\n    this.setState({ messages });\n  }\n\n  logDataUpdate = (type, action, item, id) => {\n    if (this.state.isUpdating === false) {\n      this.setState({ isUpdating: true });\n      let holder = item && item.holder ? ` (${item.holder})` : \"\";\n      let message = `${type} ${action}: ${id} ${holder}`;\n      if (type === \"link\" && action !== \"delete\") {\n        message += ` ( source: ${item.source}, target: ${item.target} )`;\n      }\n      this.addMessage(message);\n      const NEW_DATA = {\n        data: gantt.getTaskByTime().map((item) => ({\n          id: item.id,\n          holder: item.holder,\n          amount: item.amount ?? 0,\n          directMember: gantt.getChildren(item.id).length ?? 0,\n          directMemberAmount: utils.getFirstLayerAmount(item.id) ?? 0,\n          teamMember: utils.getAllLayerAmount(item.id)[\"teamMember\"],\n          teamAmount: utils.getAllLayerAmount(item.id)[\"teamAmount\"],\n          level: utils.getSelfLevel(item.id),\n          start_date: new Date(item.start_date).Format(\"yyyy-MM-dd\"),\n          duration: item.duration ?? 35,\n          progress: item.progress ?? 0.6,\n          parent: item.parent ?? undefined,\n          $open: true,\n        })),\n        links: gantt.getLinks(),\n      };\n\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(NEW_DATA));\n      this.setState({ isUpdating: false });\n    }\n  };\n\n  componentDidMount() {\n    const LOCAL_DATA = localStorage.getItem(\"hiifx_data\");\n    if (!!LOCAL_DATA) {\n      this.setState({ tasks: JSON.parse(LOCAL_DATA), isReady: true });\n    } else {\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(CONSTANT.INIT_DATA));\n      this.setState({ tasks: CONSTANT.INIT_DATA, isReady: true });\n    }\n  }\n\n  render() {\n    const { isReady, tasks, currentZoom, messages } = this.state;\n\n    return (\n      <div>\n        <div className=\"tool-bar-container\">\n          <Toolbar />\n        </div>\n        <div className=\"gantt-container\">\n          {isReady && (\n            <GanttChart\n              tasks={tasks}\n              zoom={currentZoom}\n              onDataUpdated={this.logDataUpdate}\n            />\n          )}\n        </div>\n        <MessageArea messages={messages} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n"],"sourceRoot":""}