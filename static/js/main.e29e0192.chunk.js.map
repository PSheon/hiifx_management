{"version":3,"sources":["components/Gantt/Gantt.js","components/Gantt/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","components/MessageArea/MessageArea.js","components/MessageArea/index.js","App.js","serviceWorker.js","index.js"],"names":["Gantt","props","dataProcessor","initZoom","gantt","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","onDataUpdated","this","createDataProcessor","type","action","item","id","Promise","resolve","reject","nextProps","startDateEditor","map_to","min","Date","max","config","layout","css","cols","width","rows","view","scrollX","scrollable","scrollY","group","resizer","order_branch","xml_date","columns","label","align","template","getWBSCode","min_width","max_width","tree","resize","editor","lightbox","sections","height","allow_root","root_label","start","end","ev","holder","locale","labels","icon_save","icon_cancel","icon_delete","templates","task_text","task","amount","duration","tasks","ganttContainer","initGanttDataProcessor","parse","destructor","setZoom","ref","input","style","Component","Toolbar","handleZoomChange","e","onZoomChange","target","zoomRadios","map","isActive","key","className","checked","onChange","MessageArea","messages","message","Math","random","defaultProps","prototype","Format","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","floor","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","INIT_DATA","data","start_date","progress","$open","parent","links","source","App","state","isReady","isUpdating","currentZoom","logDataUpdate","setState","addMessage","NEW_DATA","getTaskByTime","undefined","getLinks","localStorage","setItem","JSON","stringify","LOCAL_DATA","getItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e29e0192.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\n\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.initZoom();\n  }\n\n  // instance of gantt.dataProcessor\n  dataProcessor = null;\n\n  initZoom() {\n    gantt.ext.zoom.init({\n      levels: [\n        {\n          name: \"日\",\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: \"week\", step: 1, format: \"Week #%W\" },\n            { unit: \"day\", step: 1, format: \"%d %M\" },\n          ],\n        },\n        {\n          name: \"月\",\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: \"month\", step: 1, format: \"%F\" },\n            { unit: \"week\", step: 1, format: \"#%W\" },\n          ],\n        },\n      ],\n    });\n  }\n\n  setZoom(value) {\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\n     * type: \"task\"|\"link\"\n     * action: \"create\"|\"update\"|\"delete\"\n     * item: data object object\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        }\n\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n        return resolve();\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    const holderEditor = { type: \"text\", map_to: \"holder\" };\n    const amountEditor = { type: \"text\", map_to: \"amount\" };\n    const durationEditor = {\n      type: \"number\",\n      map_to: \"duration\",\n      min: 25,\n      max: 50,\n    };\n    const startDateEditor = {\n      type: \"date\",\n      map_to: \"start_date\",\n      min: new Date(2018, 0, 1),\n      max: new Date(),\n    };\n    gantt.config.layout = {\n      css: \"gantt_container\",\n      cols: [\n        {\n          width: 320,\n          rows: [\n            {\n              view: \"grid\",\n              scrollX: \"gridScroll\",\n              scrollable: true,\n              scrollY: \"scrollVer\",\n            },\n\n            // horizontal scrollbar for the grid\n            { view: \"scrollbar\", id: \"gridScroll\", group: \"horizontal\" },\n          ],\n        },\n        { resizer: true, width: 1 },\n        {\n          rows: [\n            { view: \"timeline\", scrollX: \"scrollHor\", scrollY: \"scrollVer\" },\n\n            // horizontal scrollbar for the timeline\n            { view: \"scrollbar\", id: \"scrollHor\", group: \"horizontal\" },\n          ],\n        },\n        { view: \"scrollbar\", id: \"scrollVer\" },\n      ],\n    };\n\n    gantt.config.order_branch = true;\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    gantt.config.columns = [\n      {\n        name: \"wbs\",\n        label: \"編號\",\n        align: \"center\",\n        width: 40,\n        template: gantt.getWBSCode,\n      },\n      {\n        name: \"holder\",\n        label: \"投資人\",\n        min_width: 256,\n        max_width: 360,\n        tree: true,\n        resize: true,\n        editor: holderEditor,\n      },\n      {\n        name: \"amount\",\n        label: \"投資額\",\n        align: \"center\",\n        editor: amountEditor,\n      },\n      {\n        name: \"start_date\",\n        label: \"初始託管日\",\n        align: \"center\",\n        width: 96,\n        editor: startDateEditor,\n      },\n      {\n        name: \"duration\",\n        label: \"託管時間\",\n        align: \"center\",\n        width: 60,\n        editor: durationEditor,\n      },\n      { name: \"add\", width: 40 },\n    ];\n    gantt.config.lightbox.sections = [\n      {\n        name: \"holder\",\n        height: 30,\n        map_to: \"holder\",\n        type: \"textarea\",\n      },\n      {\n        name: \"amount\",\n        height: 30,\n        map_to: \"amount\",\n        type: \"textarea\",\n      },\n      {\n        name: \"parent\",\n        type: \"parent\",\n        allow_root: \"true\",\n        root_label: \"無推薦經紀人\",\n        template: (start, end, ev) =>\n          ev.id === 0 ? \"無推薦經紀人\" : ev.holder,\n      },\n      { name: \"time\", height: 64, map_to: \"auto\", type: \"duration\" },\n    ];\n    gantt.locale.labels[\"section_holder\"] = \"投資人\";\n    gantt.locale.labels[\"section_amount\"] = \"投資額\";\n    gantt.locale.labels[\"section_parent\"] = \"推薦經紀人\";\n    gantt.locale.labels[\"section_time\"] = \"託管時間\";\n    gantt.locale.labels.icon_save = \"儲資金紀錄\";\n    gantt.locale.labels.icon_cancel = \"取消\";\n    gantt.locale.labels.icon_delete = \"刪除紀錄\";\n\n    gantt.templates.task_text = (start, end, task) =>\n      `<b>${task.holder}</b> > <b>${task.amount}</b> 美金 ${task.duration} 天 `;\n\n    const { tasks } = this.props;\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    gantt.parse(tasks);\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const { zoom } = this.props;\n    this.setZoom(zoom);\n    return (\n      <div\n        ref={(input) => {\n          this.ganttContainer = input;\n        }}\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    );\n  }\n}\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React, { Component } from \"react\";\nexport default class Toolbar extends Component {\n  handleZoomChange = (e) => {\n    if (this.props.onZoomChange) {\n      this.props.onZoomChange(e.target.value);\n    }\n  };\n  render() {\n    const zoomRadios = [\"日\", \"月\"].map((value) => {\n      const isActive = this.props.zoom === value;\n      return (\n        <label\n          key={value}\n          className={`radio-label ${isActive ? \"radio-label-active\" : \"\"}`}\n        >\n          <input\n            type=\"radio\"\n            checked={isActive}\n            onChange={this.handleZoomChange}\n            value={value}\n          />\n          {value}\n        </label>\n      );\n    });\n\n    return (\n      <div className=\"tool-bar\">\n        <div>\n          <b>海匯團隊資金管理工具</b>\n        </div>\n        <div>\n          <b>縮放維度：</b>\n          {zoomRadios}\n        </div>\n      </div>\n    );\n  }\n}\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import React, { Component } from \"react\";\n\nclass MessageArea extends Component {\n  render() {\n    const messages = this.props.messages.map(({ message }) => {\n      return <li key={Math.random()}>{message}</li>;\n    });\n\n    return (\n      <div className=\"message-area\">\n        <h3>操作紀錄：</h3>\n        <ul>{messages}</ul>\n      </div>\n    );\n  }\n}\n\nMessageArea.defaultProps = {\n  messages: [],\n};\n\nexport default MessageArea;\n","import MessageArea from './MessageArea';\nimport './MessageArea.css';\nexport default MessageArea;","import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport GanttChart from \"./components/Gantt\";\nimport Toolbar from \"./components/Toolbar\";\nimport MessageArea from \"./components/MessageArea\";\nimport \"./App.css\";\n\nDate.prototype.Format = function (fmt) {\n  //author: meizz\n  var o = {\n    \"M+\": this.getMonth() + 1, //月份\n    \"d+\": this.getDate(), //日\n    \"h+\": this.getHours(), //小时\n    \"m+\": this.getMinutes(), //分\n    \"s+\": this.getSeconds(), //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n    S: this.getMilliseconds(), //毫秒\n  };\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(\n      RegExp.$1,\n      (this.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  for (var k in o)\n    if (new RegExp(\"(\" + k + \")\").test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      );\n  return fmt;\n};\n\nconst INIT_DATA = {\n  data: [\n    {\n      id: 1,\n      holder: \"自己\",\n      start_date: \"2020-01-01\",\n      amount: 1500,\n      duration: 30,\n      progress: 0.6,\n      $open: true,\n    },\n    {\n      id: 2,\n      holder: \"投資人 #1\",\n      start_date: \"2020-01-01\",\n      parent: 1,\n      amount: 1500,\n      duration: 30,\n      progress: 0.4,\n    },\n  ],\n  links: [{ id: 1, source: 1, target: 2, type: \"0\" }],\n};\nclass App extends Component {\n  state = {\n    isReady: false,\n    isUpdating: false,\n    tasks: null,\n    currentZoom: \"月\",\n    messages: [],\n  };\n\n  addMessage(message) {\n    const maxLogLength = 5;\n    const newMessate = { message };\n    const messages = [newMessate, ...this.state.messages];\n\n    if (messages.length > maxLogLength) {\n      messages.length = maxLogLength;\n    }\n    this.setState({ messages });\n  }\n\n  logDataUpdate = (type, action, item, id) => {\n    if (this.state.isUpdating === false) {\n      this.setState({ isUpdating: true });\n      let holder = item && item.holder ? ` (${item.holder})` : \"\";\n      let message = `${type} ${action}: ${id} ${holder}`;\n      if (type === \"link\" && action !== \"delete\") {\n        message += ` ( source: ${item.source}, target: ${item.target} )`;\n      }\n      this.addMessage(message);\n      const NEW_DATA = {\n        data: gantt.getTaskByTime().map((item) => ({\n          id: item.id,\n          holder: item.holder,\n          amount: item.amount ?? 0,\n          start_date: new Date(item.start_date).Format(\"yyyy-MM-dd\"),\n          duration: item.duration,\n          progress: item.progress ?? 0.6,\n          parent: item.parent ?? undefined,\n          $open: true,\n        })),\n        links: gantt.getLinks(),\n      };\n\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(NEW_DATA));\n      this.setState({ isUpdating: false });\n    }\n  };\n\n  handleZoomChange = (zoom) => {\n    this.setState({\n      currentZoom: zoom,\n    });\n  };\n\n  componentDidMount() {\n    const LOCAL_DATA = localStorage.getItem(\"hiifx_data\");\n    if (!!LOCAL_DATA) {\n      this.setState({ tasks: JSON.parse(LOCAL_DATA), isReady: true });\n    } else {\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(INIT_DATA));\n      this.setState({ tasks: INIT_DATA, isReady: true });\n    }\n  }\n\n  render() {\n    const { isReady, tasks, currentZoom, messages } = this.state;\n\n    return (\n      <div>\n        <div className=\"zoom-bar\">\n          <Toolbar zoom={currentZoom} onZoomChange={this.handleZoomChange} />\n        </div>\n        <div className=\"gantt-container\">\n          {isReady && (\n            <GanttChart\n              tasks={tasks}\n              zoom={currentZoom}\n              onDataUpdated={this.logDataUpdate}\n            />\n          )}\n        </div>\n        <MessageArea messages={messages} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}