{"version":3,"sources":["utils/index.js","components/Gantt/Gantt.js","components/Gantt/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","components/MessageArea/MessageArea.js","components/MessageArea/index.js","App.js","registerServiceWorker.js","index.js"],"names":["getAllLayerAmount","uid","children","childrenAmount","findAllChildren","gantt","getChildren","forEach","item","userInfo","getTask","push","teamMembers","length","teamAmount","reduce","accumulator","currentValue","Number","Gantt","props","dataProcessor","initZoom","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","date","dateToStr","date_to_str","endDate","add","height","value","setLevel","onDataUpdated","this","createDataProcessor","type","action","id","Promise","resolve","reject","nextProps","startDateEditor","map_to","min","Date","max","config","task_date","addMarker","start_date","css","text","title","quickinfo_buttons","reorder_grid_columns","order_branch","keep_grid_width","xml_date","columns","label","align","max_width","resize","template","getWBSCode","min_width","tree","editor","width","lightbox","sections","allow_root","root_label","start","end","ev","holder","locale","labels","icon_save","icon_cancel","attachEvent","amount","message","templates","task_class","task","0","1","2","3","match","quick_info_title","quick_info_content","childrenID","total","childID","utils","scale_cell_class","getDay","timeline_cell_class","task_text","rightside_text","entrustInDate","getTime","Math","floor","progress_text","link_class","link","source","tasks","ganttContainer","initGanttDataProcessor","parse","destructor","setZoom","ref","input","style","Component","Toolbar","className","onClick","undo","redo","zoomIn","zoomOut","fullscreen","expand","getGridColumn","hide","grid_width","render","MessageArea","messages","map","key","random","defaultProps","prototype","Format","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","INIT_DATA","data","duration","progress","$open","parent","links","target","App","state","isReady","isUpdating","currentZoom","logDataUpdate","setState","addMessage","NEW_DATA","getTaskByTime","undefined","getLinks","localStorage","setItem","JSON","stringify","LOCAL_DATA","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e61dd101.chunk.js","sourcesContent":["import { gantt } from \"dhtmlx-gantt\";\n\nexport const getAllLayerAmount = (uid) => {\n  let children = [];\n  let childrenAmount = [];\n\n  const findAllChildren = (uid) => {\n    gantt.getChildren(uid).forEach((item) => {\n      const userInfo = gantt.getTask(item);\n      children.push(userInfo[\"holder\"]);\n      childrenAmount.push(userInfo[\"amount\"]);\n      findAllChildren(item);\n    });\n  };\n\n  findAllChildren(uid);\n\n  return {\n    teamMembers: children.length,\n    teamAmount: childrenAmount.reduce(\n      (accumulator, currentValue) => accumulator + Number(currentValue),\n      0\n    ),\n  };\n};\n\nexport const getFirstLayerAmount = (uid) => {\n  const childrenID = gantt.getChildren(uid);\n  let total = 0;\n  childrenID.forEach((childID) => {\n    const userInfo = gantt.getTask(childID);\n    total += Number(userInfo.amount ?? 0);\n  });\n\n  return total;\n};\n","import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_fullscreen.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_quick_info.js\";\nimport \"dhtmlx-gantt/codebase/ext/dhtmlxgantt_undo.js\";\nimport \"dhtmlx-gantt/codebase/locale/locale_cn.js\";\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\n\nimport * as utils from \"../../utils\";\n\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.initZoom();\n  }\n\n  // instance of gantt.dataProcessor\n  dataProcessor = null;\n\n  initZoom() {\n    gantt.ext.zoom.init({\n      levels: [\n        {\n          name: \"日\",\n          scale_height: 27,\n          min_column_width: 80,\n          scales: [{ unit: \"day\", step: 1, format: \"%d %M\" }],\n        },\n        {\n          name: \"週\",\n          scale_height: 50,\n          min_column_width: 50,\n          scales: [\n            {\n              unit: \"week\",\n              step: 1,\n              format: function (date) {\n                var dateToStr = gantt.date.date_to_str(\"%d %M\");\n                var endDate = gantt.date.add(date, -6, \"day\");\n                var weekNum = gantt.date.date_to_str(\"%W\")(date);\n                return (\n                  \"#\" +\n                  weekNum +\n                  \", \" +\n                  dateToStr(date) +\n                  \" - \" +\n                  dateToStr(endDate)\n                );\n              },\n            },\n            { unit: \"day\", step: 1, format: \"%j %D\" },\n          ],\n        },\n        {\n          name: \"月\",\n          scale_height: 50,\n          min_column_width: 120,\n          scales: [\n            { unit: \"month\", format: \"%F, %Y\" },\n            { unit: \"week\", format: \"Week #%W\" },\n          ],\n        },\n        {\n          name: \"季\",\n          height: 50,\n          min_column_width: 90,\n          scales: [\n            { unit: \"month\", step: 1, format: \"%M\" },\n            {\n              unit: \"quarter\",\n              step: 1,\n              format: function (date) {\n                var dateToStr = gantt.date.date_to_str(\"%M\");\n                var endDate = gantt.date.add(\n                  gantt.date.add(date, 3, \"month\"),\n                  -1,\n                  \"day\"\n                );\n                return dateToStr(date) + \" - \" + dateToStr(endDate);\n              },\n            },\n          ],\n        },\n        {\n          name: \"年\",\n          scale_height: 50,\n          min_column_width: 30,\n          scales: [{ unit: \"year\", step: 1, format: \"%Y\" }],\n        },\n      ],\n    });\n  }\n\n  setZoom(value) {\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\n     * type: \"task\"|\"link\"\n     * action: \"create\"|\"update\"|\"delete\"\n     * item: data object object\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        }\n\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n        return resolve();\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    const holderEditor = { type: \"text\", map_to: \"holder\" };\n    const amountEditor = { type: \"text\", map_to: \"amount\" };\n    const durationEditor = {\n      type: \"number\",\n      map_to: \"duration\",\n      min: 0,\n      max: 50,\n    };\n    const startDateEditor = {\n      type: \"date\",\n      map_to: \"start_date\",\n      min: new Date(2018, 0, 1),\n      max: new Date(),\n    };\n    const dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n    gantt.addMarker({\n      start_date: new Date(),\n      css: \"today\",\n      text: \"今天\",\n      title: dateToStr(new Date()),\n    });\n\n    gantt.config.quickinfo_buttons = [\"icon_edit\", \"icon_delete\"];\n    gantt.config.reorder_grid_columns = true;\n    gantt.config.order_branch = true;\n    gantt.config.keep_grid_width = true;\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    gantt.config.columns = [\n      {\n        name: \"wbs\",\n        label: \"編號\",\n        align: \"center\",\n        max_width: 64,\n        resize: true,\n        template: gantt.getWBSCode,\n      },\n      {\n        name: \"holder\",\n        label: \"投資人\",\n        min_width: 150,\n        max_width: 200,\n        tree: true,\n        resize: true,\n        editor: holderEditor,\n      },\n      {\n        name: \"amount\",\n        label: \"投資額\",\n        align: \"center\",\n        min_width: 40,\n        resize: true,\n        editor: amountEditor,\n      },\n      {\n        name: \"start_date\",\n        label: \"初始託管日\",\n        align: \"center\",\n        max_width: 96,\n        resize: true,\n        editor: startDateEditor,\n      },\n      {\n        name: \"duration\",\n        label: \"託管時間\",\n        align: \"center\",\n        max_width: 64,\n        resize: true,\n        editor: durationEditor,\n      },\n      { name: \"add\", width: 40 },\n    ];\n    gantt.config.lightbox.sections = [\n      {\n        name: \"holder\",\n        height: 30,\n        map_to: \"holder\",\n        type: \"textarea\",\n      },\n      {\n        name: \"amount\",\n        height: 30,\n        map_to: \"amount\",\n        type: \"textarea\",\n      },\n      {\n        name: \"parent\",\n        type: \"parent\",\n        allow_root: \"true\",\n        root_label: \"無推薦經紀人\",\n        template: (start, end, ev) =>\n          ev.id === 0 ? \"無推薦經紀人\" : ev.holder,\n      },\n      { name: \"time\", map_to: \"auto\", type: \"duration\" },\n    ];\n    gantt.locale.labels[\"section_holder\"] = \"投資人\";\n    gantt.locale.labels[\"section_amount\"] = \"投資額\";\n    gantt.locale.labels[\"section_parent\"] = \"推薦經紀人\";\n    gantt.locale.labels[\"section_time\"] = \"託管時間\";\n    gantt.locale.labels[\"icon_delete\"] = \"刪除紀錄\";\n    gantt.locale.labels[\"icon_edit\"] = \"編輯紀錄\";\n    gantt.locale.labels[\"confirm_link_deleting\"] = \"將被刪除\";\n    gantt.locale.labels.icon_save = \"儲資金紀錄\";\n    gantt.locale.labels.icon_cancel = \"取消\";\n\n    gantt.attachEvent(\"onLightboxSave\", function (id, item) {\n      if (!item.holder) {\n        gantt.message({ type: \"error\", text: \"請輸入投資人\" });\n        return false;\n      }\n      if (!item.amount) {\n        gantt.message({\n          type: \"error\",\n          text: \"請輸入投資額\",\n        });\n        return false;\n      }\n      return true;\n    });\n\n    gantt.templates.task_class = function (start, end, task) {\n      const currentLayer = (gantt.getWBSCode(task).match(/\\./g) || []).length;\n      const LAYER_TABLE = {\n        0: \"top-layer\",\n        1: \"first-layer\",\n        2: \"second-layer\",\n        3: \"third-layer\",\n      };\n      return LAYER_TABLE[currentLayer];\n    };\n    gantt.templates.quick_info_title = (start, end, task) => task.holder;\n    gantt.templates.quick_info_content = (start, end, task) =>\n      `自身綁定： ${task.amount} </br>\n      有效直推：${gantt.getChildren(task.id).length} </br>\n      直推綁定： ${utils.getFirstLayerAmount(task.id)} </br>\n      團隊人數： ${utils.getAllLayerAmount(task.id)[\"teamMembers\"]} </br>\n      團隊綁定： ${utils.getAllLayerAmount(task.id)[\"teamAmount\"]} </br>\n      `;\n    gantt.templates.scale_cell_class = (date) => {\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return \"weekend\";\n      }\n    };\n    gantt.templates.timeline_cell_class = (task, date) => {\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return \"weekend\";\n      }\n    };\n    gantt.templates.task_text = (start, end, task) =>\n      `<b>${task.holder}</b> > <b>${task.amount}</b> 美金`;\n    gantt.templates.rightside_text = (start, end, task) => {\n      const entrustInDate =\n        (new Date().getTime() - new Date(start).getTime()) / (1000 * 3600 * 24);\n      if (entrustInDate > 0) {\n        return \"<b>託管 </b>\" + Math.floor(entrustInDate) + \"天\";\n      } else {\n        return \"<b>尚未開始託管</b>\";\n      }\n    };\n    gantt.templates.progress_text = (start, end, task) =>\n      \"<span class='progress_text'>\" +\n      gantt.getChildren(task.id).length +\n      \" 直推 </span>\";\n    gantt.templates.link_class = (link) => {\n      const LINK_TABLE = {\n        1: \"first-link\",\n        2: \"second-link\",\n        3: \"third-link\",\n      };\n      return LINK_TABLE[link.source] ?? \"\";\n    };\n\n    const { tasks } = this.props;\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    gantt.parse(tasks);\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const { zoom } = this.props;\n    this.setZoom(zoom);\n    return (\n      <div\n        ref={(input) => {\n          this.ganttContainer = input;\n        }}\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    );\n  }\n}\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport {\n  SkipBack,\n  SkipForward,\n  Maximize,\n  ZoomIn,\n  ZoomOut,\n} from \"react-feather\";\n\nconst Toolbar = () => {\n  const handleFullscreen = () => {\n    gantt.ext.fullscreen.expand();\n\n    gantt.getGridColumn(\"wbs\").hide = true;\n    gantt.getGridColumn(\"duration\").hide = true;\n    gantt.getGridColumn(\"start_date\").hide = true;\n\n    gantt.config.grid_width = 150;\n\n    gantt.render();\n  };\n\n  return (\n    <div className=\"tool-bar\">\n      <div>\n        <b>海匯團隊資金管理工具</b>\n      </div>\n      <div className=\"tool-wrapper\">\n        <div className=\"action-icon-wrapper\">\n          <SkipBack onClick={() => gantt.undo()} />\n          <SkipForward onClick={() => gantt.redo()} />\n        </div>\n        <div className=\"zoom-icon-wrapper\">\n          <ZoomIn onClick={() => gantt.ext.zoom.zoomIn()} />\n          <ZoomOut onClick={() => gantt.ext.zoom.zoomOut()} />\n        </div>\n        <div className=\"fullscreen-icon-wrapper\" onClick={handleFullscreen}>\n          <Maximize />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import React, { Component } from \"react\";\n\nclass MessageArea extends Component {\n  render() {\n    const messages = this.props.messages.map(({ message }) => {\n      return <li key={Math.random()}>{message}</li>;\n    });\n\n    return (\n      <div className=\"message-area\">\n        <h3>操作紀錄：</h3>\n        <ul>{messages}</ul>\n      </div>\n    );\n  }\n}\n\nMessageArea.defaultProps = {\n  messages: [],\n};\n\nexport default MessageArea;\n","import MessageArea from './MessageArea';\nimport './MessageArea.css';\nexport default MessageArea;","import React, { Component } from \"react\";\nimport { gantt } from \"dhtmlx-gantt\";\nimport GanttChart from \"./components/Gantt\";\nimport Toolbar from \"./components/Toolbar\";\nimport MessageArea from \"./components/MessageArea\";\nimport \"./App.css\";\n\nDate.prototype.Format = function (fmt) {\n  //author: meizz\n  var o = {\n    \"M+\": this.getMonth() + 1, //月份\n    \"d+\": this.getDate(), //日\n    \"h+\": this.getHours(), //小时\n    \"m+\": this.getMinutes(), //分\n    \"s+\": this.getSeconds(), //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n    S: this.getMilliseconds(), //毫秒\n  };\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(\n      RegExp.$1,\n      (this.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  for (var k in o)\n    if (new RegExp(\"(\" + k + \")\").test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      );\n  return fmt;\n};\n\nconst INIT_DATA = {\n  data: [\n    {\n      id: 1,\n      holder: \"自己\",\n      start_date: \"2020-01-01\",\n      amount: 1500,\n      duration: 30,\n      progress: 0.6,\n      $open: true,\n    },\n    {\n      id: 2,\n      holder: \"投資人 #1\",\n      start_date: \"2020-01-01\",\n      parent: 1,\n      amount: 1500,\n      duration: 30,\n      progress: 0.4,\n    },\n  ],\n  links: [{ id: 1, source: 1, target: 2, type: \"0\" }],\n};\nclass App extends Component {\n  state = {\n    isReady: false,\n    isUpdating: false,\n    tasks: null,\n    currentZoom: \"月\",\n    messages: [],\n  };\n\n  addMessage(message) {\n    const maxLogLength = 5;\n    const newMessate = { message };\n    const messages = [newMessate, ...this.state.messages];\n\n    if (messages.length > maxLogLength) {\n      messages.length = maxLogLength;\n    }\n    this.setState({ messages });\n  }\n\n  logDataUpdate = (type, action, item, id) => {\n    if (this.state.isUpdating === false) {\n      this.setState({ isUpdating: true });\n      let holder = item && item.holder ? ` (${item.holder})` : \"\";\n      let message = `${type} ${action}: ${id} ${holder}`;\n      if (type === \"link\" && action !== \"delete\") {\n        message += ` ( source: ${item.source}, target: ${item.target} )`;\n      }\n      this.addMessage(message);\n      const NEW_DATA = {\n        data: gantt.getTaskByTime().map((item) => ({\n          id: item.id,\n          holder: item.holder,\n          amount: item.amount ?? 0,\n          start_date: new Date(item.start_date).Format(\"yyyy-MM-dd\"),\n          duration: item.duration ?? 35,\n          progress: item.progress ?? 0.6,\n          parent: item.parent ?? undefined,\n          $open: true,\n        })),\n        links: gantt.getLinks(),\n      };\n\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(NEW_DATA));\n      this.setState({ isUpdating: false });\n    }\n  };\n\n  componentDidMount() {\n    const LOCAL_DATA = localStorage.getItem(\"hiifx_data\");\n    if (!!LOCAL_DATA) {\n      this.setState({ tasks: JSON.parse(LOCAL_DATA), isReady: true });\n    } else {\n      localStorage.setItem(\"hiifx_data\", JSON.stringify(INIT_DATA));\n      this.setState({ tasks: INIT_DATA, isReady: true });\n    }\n  }\n\n  render() {\n    const { isReady, tasks, currentZoom, messages } = this.state;\n\n    return (\n      <div>\n        <div className=\"zoom-bar\">\n          <Toolbar />\n        </div>\n        <div className=\"gantt-container\">\n          {isReady && (\n            <GanttChart\n              tasks={tasks}\n              zoom={currentZoom}\n              onDataUpdated={this.logDataUpdate}\n            />\n          )}\n        </div>\n        <MessageArea messages={messages} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n"],"sourceRoot":""}